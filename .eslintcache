[{"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\index.tsx":"1","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\reportWebVitals.ts":"2","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\store.ts":"3","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\App.jsx":"4","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\appReduserOld.js":"5","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\userReduser.ts":"6","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\app-reducer.ts":"7","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\tasksReduser.ts":"8","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\authReducer.ts":"9","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\todolists-reducer.ts":"10","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\groupReduser.ts":"11","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\login\\Login.js":"12","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\register\\Register.js":"13","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Dashboard.jsx":"14","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\Api.ts":"15","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\route.ts":"16","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\groups.tsx":"17","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\groupPage.tsx":"18","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\users\\users.tsx":"19","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groupUsers\\groupsUsers.tsx":"20","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\listItems.jsx":"21","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\starting.jsx":"22","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\page404\\Page404.jsx":"23","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\users\\user.tsx":"24","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\todoList.tsx":"25","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\todo.tsx":"26","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Orders.jsx":"27","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Deposits.jsx":"28","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Chart.jsx":"29","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Title.jsx":"30","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\group.tsx":"31","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\utils\\error-utils.ts":"32","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\task.tsx":"33","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\AddItemForm.tsx":"34","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\EditableSpan.tsx":"35","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\SmalAlert.tsx":"36","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\page500\\Page500.jsx":"37"},{"size":1183,"mtime":1614441416029,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1612565314468,"results":"40","hashOfConfig":"39"},{"size":851,"mtime":1615932671057,"results":"41","hashOfConfig":"39"},{"size":1735,"mtime":1616966862289,"results":"42","hashOfConfig":"39"},{"size":227,"mtime":1617321503550,"results":"43","hashOfConfig":"39"},{"size":6756,"mtime":1617129616799,"results":"44","hashOfConfig":"39"},{"size":2383,"mtime":1613449007035,"results":"45","hashOfConfig":"39"},{"size":7313,"mtime":1617321674686,"results":"46","hashOfConfig":"39"},{"size":1999,"mtime":1613449590988,"results":"47","hashOfConfig":"39"},{"size":5370,"mtime":1617134905406,"results":"48","hashOfConfig":"39"},{"size":3378,"mtime":1617131045748,"results":"49","hashOfConfig":"39"},{"size":3822,"mtime":1615124439273,"results":"50","hashOfConfig":"39"},{"size":3525,"mtime":1614524390187,"results":"51","hashOfConfig":"39"},{"size":7953,"mtime":1617322272836,"results":"52","hashOfConfig":"39"},{"size":8107,"mtime":1617133823134,"results":"53","hashOfConfig":"39"},{"size":397,"mtime":1615894274958,"results":"54","hashOfConfig":"39"},{"size":2791,"mtime":1616889025143,"results":"55","hashOfConfig":"39"},{"size":2620,"mtime":1617051404713,"results":"56","hashOfConfig":"39"},{"size":4038,"mtime":1616528788359,"results":"57","hashOfConfig":"39"},{"size":624,"mtime":1614771098200,"results":"58","hashOfConfig":"39"},{"size":3728,"mtime":1615127732352,"results":"59","hashOfConfig":"39"},{"size":1533,"mtime":1612630345203,"results":"60","hashOfConfig":"39"},{"size":1294,"mtime":1612304335247,"results":"61","hashOfConfig":"39"},{"size":5276,"mtime":1617064450928,"results":"62","hashOfConfig":"39"},{"size":4267,"mtime":1617322211422,"results":"63","hashOfConfig":"39"},{"size":4125,"mtime":1617130294042,"results":"64","hashOfConfig":"39"},{"size":2351,"mtime":1612111362000,"results":"65","hashOfConfig":"39"},{"size":847,"mtime":1612111362000,"results":"66","hashOfConfig":"39"},{"size":1429,"mtime":1612623836152,"results":"67","hashOfConfig":"39"},{"size":356,"mtime":1612625632421,"results":"68","hashOfConfig":"39"},{"size":1420,"mtime":1616967532546,"results":"69","hashOfConfig":"39"},{"size":801,"mtime":1613449702523,"results":"70","hashOfConfig":"39"},{"size":1815,"mtime":1617130294048,"results":"71","hashOfConfig":"39"},{"size":1573,"mtime":1617321736630,"results":"72","hashOfConfig":"39"},{"size":943,"mtime":1614533567650,"results":"73","hashOfConfig":"39"},{"size":1900,"mtime":1616945554218,"results":"74","hashOfConfig":"39"},{"size":1313,"mtime":1612304335247,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"zqq5rk",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\index.tsx",[],["160","161"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\reportWebVitals.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\store.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\App.jsx",["162","163"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\appReduserOld.js",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\userReduser.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\app-reducer.ts",["164","165"],"import {Dispatch} from \"redux\";\r\nimport {handleServerAppError} from \"../utils/error-utils\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'IS-INIT':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'IS-INIT', isInitialized} as const)\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setIsInitializedACType = ReturnType<typeof setIsInitializedAC>\r\n\r\n\r\n// export const initializeAppTC = () => (dispatch: Dispatch) => {\r\n//     authAPI.me()\r\n//         .then(res => {\r\n//         // debugger\r\n//         if (res.data.resultCode === 0) {\r\n//             dispatch(setIsLoggedInAC(true));\r\n//\r\n//          }\r\n//         else {\r\n//             // debugger\r\n//             // // handleServerAppError(err, dispatch);\r\n//         }\r\n//     })\r\n//         .catch((err) => {\r\n//             handleServerAppError(err, dispatch);\r\n//             dispatch(setIsInitializedAC(true))\r\n//             // throw new Error(err.message)\r\n//         })\r\n//     dispatch(setIsInitializedAC(true))\r\n// }\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | setIsInitializedACType\r\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\tasksReduser.ts",["166"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\authReducer.ts",["167","168"],"import { Dispatch } from 'redux'\r\nimport {handleServerAppError, handleServerNetworkError} from \"../utils/error-utils\"\r\nimport {LoginParamsType} from \"./Api\";\r\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    // authAPI.login(data).\r\n    //     then(res=>{\r\n    //     if (res.data.resultCode === 0) {\r\n    //         dispatch(setIsLoggedInAC(true))\r\n    //         dispatch(setAppStatusAC('succeeded'))\r\n    //     } else {\r\n    //         handleServerAppError(res.data, dispatch);\r\n    //     }\r\n    // })\r\n    //     .catch((error) => {\r\n    //         handleServerNetworkError(error, dispatch)\r\n    //     })\r\n\r\n}\r\n\r\n// export const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n//     dispatch(setAppStatusAC('loading'))\r\n//     authAPI.logout()\r\n//         .then(res => {\r\n//             if (res.data.resultCode === 0) {\r\n//                 dispatch(setIsLoggedInAC(false))\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             } else {\r\n//                 handleServerAppError(res.data, dispatch)\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             handleServerNetworkError(error, dispatch)\r\n//         })\r\n// }\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType\r\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\todolists-reducer.ts",["169","170"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\groupReduser.ts",["171","172","173"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\login\\Login.js",["174","175"],"import React, {useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport {\n  CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CForm, CInput,\n  CInputGroup, CInputGroupPrepend, CInputGroupText, CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {createUserTC, loginUserTC} from \"../../../../bll/userReduser\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Login = () => {\n  console.log('login');\n  debugger\n  const status = useSelector(state => state.users.status)\n  const dispatch = useDispatch()\n  let [email, setEmail] = useState('lisa15.08patrikeevana@gmail.com')\n  let [password, setPassword] = useState('lisa15')\n  const createEmail = (e) => {setEmail(e.currentTarget.value)}\n  const createPassword = (e) => {setPassword(e.currentTarget.value)}\n  const HandleLogin = ()=>{\n    dispatch(loginUserTC(email,password))\n    setEmail('')\n    setPassword('')\n  }\n  // if(status){return <Redirect to='/groupsUsers' />}\n  // console.log('login page:', status);\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\" onChange={createEmail} value={email}/>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"  value={password} onChange={createPassword}/>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton color=\"primary\" className=\"px-5\" onClick={HandleLogin}>Login</CButton>\n                      </CCol>\n                      {status &&\n                      <CCol xs=\"6\"> <Link to=\"/groupsUsers\">\n                        <CButton color=\"primary\" className=\"px-4\">main</CButton>\n                      </Link> </CCol>}\n                      {/*<CCol xs=\"6\" className=\"text-right\">*/}\n                      {/*  <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>*/}\n                      {/*</CCol>*/}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' , margin: '10px auto'}}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n",["176","177"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\register\\Register.js",["178","179"],"import React, {useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createUserTC} from \"../../../../bll/userReduser\";\nimport {Redirect} from \"react-router-dom\";\nimport Dashboard from \"../../../components/dashboard/Dashboard\";\n\nconst Register = () => {\n\n  const userRecord = useSelector(state => state.users.userRecord)\n  const dispatch = useDispatch()\n  let [username,setUsername]=useState('')\n  let [email, setEmail] = useState('')\n  let [password, setPassword] = useState('lisa15')\n  const createUsername = (e) => {\n    setUsername(e.currentTarget.value)\n  }\n  const createEmail = (e) => {\n    setEmail(e.currentTarget.value)\n  }\n  const createPassword = (e) => {\n    setPassword(e.currentTarget.value)\n  }\n  const HandleRegister = ()=>{\n    dispatch(createUserTC(email,password,username))\n    setUsername('')\n    setEmail('')\n    setPassword('')\n  }\n  console.log(userRecord);\n\n  if(userRecord){return <Redirect to='/login' />}\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" value={username} onChange={createUsername}/>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\" onChange={createEmail} value={email}/>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\" value={password} onChange={createPassword}/>\n                  </CInputGroup>\n                  {/*<CInputGroup className=\"mb-4\">*/}\n                  {/*  <CInputGroupPrepend>*/}\n                  {/*    <CInputGroupText>*/}\n                  {/*      <CIcon name=\"cil-lock-locked\" />*/}\n                  {/*    </CInputGroupText>*/}\n                  {/*  </CInputGroupPrepend>*/}\n                  {/*  <CInput type=\"password\" placeholder=\"Repeat password\" autoComplete=\"new-password\" />*/}\n                  {/*</CInputGroup>*/}\n                  <CButton color=\"success\" block onClick={HandleRegister}>Create Account</CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Dashboard.jsx",["180","181"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\bll\\Api.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\route.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\groups.tsx",["182","183"],"import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport Group from \"./group\";\r\nimport {GroupType} from \"../../../bll/Api\";\r\nimport cl from \"../groupUsers/groupUsers.module.css\";\r\nimport {addGroupsTC, getGroupsTC} from \"../../../bll/groupReduser\";\r\nimport DenseTable from \"./tableGroup\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\nconst Groups = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getGroupsTC())\r\n    }, [dispatch])\r\n    const allGroups = useSelector<AppRootStateType, Array<GroupType>>(state => state.groups.groups)\r\n    let [nGroup, setNumGroup] = useState<string>('')\r\n    const setNewGroup = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNumGroup(e.currentTarget.value)\r\n    }\r\n    const createGroup = () => {\r\n        dispatch(addGroupsTC(nGroup.trim()))\r\n        setNumGroup('')\r\n    }\r\n    const group = allGroups.map(g => <Group key={g.id} id={g.id} name={g.data.group}\r\n                                                  users={g.data.users}/>)\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <p>GroupsUsers:\r\n                <input type=\"text\" value={nGroup} onChange={setNewGroup}/>\r\n                <button onClick={createGroup}>create group</button>\r\n            </p>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >Users (lists)</TableCell>\r\n                            <TableCell align=\"right\">Names group</TableCell>\r\n                            {/*<TableCell align=\"right\">Fat&nbsp;(g)</TableCell>*/}\r\n                            <TableCell align=\"right\">buttons group&nbsp;</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {group}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {/*<div className={cl.wrap}>{group}</div>*/}\r\n            {/*<DenseTable/>*/}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Groups;\r\n\r\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\groupPage.tsx",["184","185","186","187"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\users\\users.tsx",["188","189","190","191","192","193","194","195","196"],"import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    removeUserTC,\n    setUserOnGroupTC,\n    setUsersTC,\n    userType\n} from \"../../../bll/userReduser\";\nimport {AppRootStateType} from \"../../../bll/store\";\nimport User from \"../users/user\";\nimport cl from './user.module.css';\nimport {GroupType} from \"../../../bll/Api\";\nimport {getGroupsTC, groupUsersType} from \"../../../bll/groupReduser\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\nconst Users = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(setUsersTC())\n        dispatch(getGroupsTC())\n    }, [dispatch])\n    const removeUser = useCallback(function (uid: string) {\n        const action = removeUserTC(uid)\n        dispatch(action)\n    }, [])\n    const addUserToGroup = (id: string, uid: string, userName: string, user: groupUsersType) => {\n        // dispatch(setUserOnGroupTC(id,uid, userName))\n        dispatch(setUserOnGroupTC(id, uid, userName, user))\n    }\n    const allUsers = useSelector<AppRootStateType, Array<userType>>(state => state.users.users)\n    const allGroups = useSelector<AppRootStateType, Array<GroupType>>(state => state.groups.groups)\n    const user = allUsers.map(u => <User key={u.uid} groupName={u.groupName} groupId={u.groupId} name={u.displayName} date={u.tokensValidAfterTime}\n                                         email={u.email} listTasks={u.listTasks} uid={u.uid} removeUser={removeUser}\n                                         addUserToGroup={addUserToGroup} phoneNumber={u.phoneNumber}\n                                         listGroup={allGroups}/>)\n    return (\n        <div>\n            <input type=\"text\"/>\n            <h5>all users: </h5>\n            <p>пс. чтоб обновить поля( email и name ) даблклик и апдейт</p>\n            {/*<div className={cl.wrap}>{user}</div>*/}\n            <div>\n                <div className={cl.table} aria-label=\"a dense table\">\n                    <div className={cl.TableHead}>\n                        <div className={cl.TableRow}>\n                            <div className={cl.large}>\n                                <h4>Users (data)</h4>\n                                <span className={cl.wrap}>\n                                    <p>email</p>\n                                    <p>name</p>\n                                    <p>phoneNumber</p>\n                                </span>\n                            </div>\n                            <div className={cl.medium}>\n                                <h4>buttons group</h4>\n                                <span className={cl.wrap}>\n                                    <p>change/add group</p>\n                                    <p>change/delet user</p>\n                                </span>\n                            </div>\n                            <div className={cl.small}>\n                                <h4>Users (info)</h4>\n                                <span className={cl.wrap}>\n                                    <p>group</p>\n                                    <p>task</p>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={cl.TableBody}>\n                        {user}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Users;\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groupUsers\\groupsUsers.tsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\listItems.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\starting.jsx",["197"],"import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chart from \"../components/dashboard/Chart\";\r\nimport Deposits from \"../components/dashboard/Deposits\";\r\nimport Orders from \"../components/dashboard/Orders\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst Starting = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    return (\r\n        <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper className={fixedHeightPaper}>\r\n                    <Chart />\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaper}>\r\n                    <Deposits />\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <Orders />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Starting;","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\page404\\Page404.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\users\\user.tsx",["198","199"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\todoList.tsx",["200","201","202","203","204","205","206","207","208"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\todo.tsx",["209","210","211","212","213"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Orders.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Deposits.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Chart.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\dashboard\\Title.jsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\groups\\group.tsx",["214"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\utils\\error-utils.ts",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\todo\\task.tsx",["215","216","217"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {EditableSpan} from \"../../components/common/EditableSpan\";\r\nimport {TaskStatuses, TaskType} from \"../../../bll/Api\";\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string,task: TaskType) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => {\r\n        debugger\r\n    return props.removeTask(props.task.id, props.todolistId,props.task)}, [props.task.id, props.todolistId]\r\n    );\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\AddItemForm.tsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\EditableSpan.tsx",[],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\components\\common\\SmalAlert.tsx",["218"],"E:\\react\\dragan wrap\\new-node\\tools-bar\\src\\ui\\views\\pages\\page500\\Page500.jsx",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"227","line":21,"column":11,"nodeType":"225","messageId":"226","endLine":21,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":1,"column":9,"nodeType":"225","messageId":"226","endLine":1,"endColumn":17},{"ruleId":"228","severity":1,"message":"230","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"231","line":102,"column":10,"nodeType":"225","messageId":"226","endLine":102,"endColumn":19},{"ruleId":"228","severity":1,"message":"230","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"232","line":2,"column":31,"nodeType":"225","messageId":"226","endLine":2,"endColumn":55},{"ruleId":"228","severity":1,"message":"233","line":1,"column":9,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":25,"column":45,"nodeType":"236","messageId":"237","endLine":25,"endColumn":47},{"ruleId":"228","severity":1,"message":"233","line":1,"column":9,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"228","severity":1,"message":"238","line":2,"column":20,"nodeType":"225","messageId":"226","endLine":2,"endColumn":25},{"ruleId":"228","severity":1,"message":"239","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"224","line":2,"column":15,"nodeType":"225","messageId":"226","endLine":2,"endColumn":23},{"ruleId":"223","severity":1,"message":"240","line":8,"column":9,"nodeType":"225","messageId":"226","endLine":8,"endColumn":21},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"241","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":14},{"ruleId":"223","severity":1,"message":"242","line":20,"column":8,"nodeType":"225","messageId":"226","endLine":20,"endColumn":17},{"ruleId":"223","severity":1,"message":"243","line":30,"column":8,"nodeType":"225","messageId":"226","endLine":30,"endColumn":22},{"ruleId":"223","severity":1,"message":"244","line":129,"column":7,"nodeType":"225","messageId":"226","endLine":129,"endColumn":18},{"ruleId":"228","severity":1,"message":"245","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":10},{"ruleId":"228","severity":1,"message":"246","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":26,"column":11,"nodeType":"225","messageId":"226","endLine":26,"endColumn":22},{"ruleId":"228","severity":1,"message":"248","line":31,"column":19,"nodeType":"225","messageId":"226","endLine":31,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":45,"column":8,"nodeType":"251","endLine":45,"endColumn":18,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"250","line":49,"column":8,"nodeType":"251","endLine":49,"endColumn":18,"suggestions":"253"},{"ruleId":"228","severity":1,"message":"254","line":14,"column":8,"nodeType":"225","messageId":"226","endLine":14,"endColumn":22},{"ruleId":"228","severity":1,"message":"255","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":13},{"ruleId":"228","severity":1,"message":"256","line":16,"column":8,"nodeType":"225","messageId":"226","endLine":16,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":17,"column":8,"nodeType":"225","messageId":"226","endLine":17,"endColumn":17},{"ruleId":"228","severity":1,"message":"258","line":18,"column":8,"nodeType":"225","messageId":"226","endLine":18,"endColumn":16},{"ruleId":"228","severity":1,"message":"259","line":19,"column":8,"nodeType":"225","messageId":"226","endLine":19,"endColumn":17},{"ruleId":"228","severity":1,"message":"260","line":20,"column":8,"nodeType":"225","messageId":"226","endLine":20,"endColumn":17},{"ruleId":"228","severity":1,"message":"261","line":24,"column":7,"nodeType":"225","messageId":"226","endLine":24,"endColumn":16},{"ruleId":"249","severity":1,"message":"262","line":42,"column":8,"nodeType":"251","endLine":42,"endColumn":10,"suggestions":"263"},{"ruleId":"223","severity":1,"message":"264","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":17},{"ruleId":"228","severity":1,"message":"265","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":27},{"ruleId":"249","severity":1,"message":"266","line":67,"column":8,"nodeType":"251","endLine":67,"endColumn":28,"suggestions":"267"},{"ruleId":"228","severity":1,"message":"224","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"228","severity":1,"message":"268","line":7,"column":5,"nodeType":"225","messageId":"226","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"269","line":10,"column":5,"nodeType":"225","messageId":"226","endLine":10,"endColumn":21},{"ruleId":"228","severity":1,"message":"270","line":30,"column":11,"nodeType":"225","messageId":"226","endLine":30,"endColumn":21},{"ruleId":"249","severity":1,"message":"262","line":40,"column":8,"nodeType":"251","endLine":40,"endColumn":10,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"262","line":49,"column":8,"nodeType":"251","endLine":49,"endColumn":10,"suggestions":"272"},{"ruleId":"249","severity":1,"message":"262","line":55,"column":8,"nodeType":"251","endLine":55,"endColumn":10,"suggestions":"273"},{"ruleId":"249","severity":1,"message":"274","line":60,"column":8,"nodeType":"251","endLine":60,"endColumn":10,"suggestions":"275"},{"ruleId":"249","severity":1,"message":"274","line":64,"column":8,"nodeType":"251","endLine":64,"endColumn":18,"suggestions":"276"},{"ruleId":"249","severity":1,"message":"274","line":35,"column":8,"nodeType":"251","endLine":35,"endColumn":42,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"274","line":42,"column":8,"nodeType":"251","endLine":42,"endColumn":54,"suggestions":"278"},{"ruleId":"249","severity":1,"message":"274","line":44,"column":95,"nodeType":"251","endLine":44,"endColumn":134,"suggestions":"279"},{"ruleId":"249","severity":1,"message":"274","line":45,"column":101,"nodeType":"251","endLine":45,"endColumn":140,"suggestions":"280"},{"ruleId":"249","severity":1,"message":"274","line":46,"column":107,"nodeType":"251","endLine":46,"endColumn":146,"suggestions":"281"},{"ruleId":"249","severity":1,"message":"262","line":21,"column":8,"nodeType":"251","endLine":21,"endColumn":18,"suggestions":"282"},{"ruleId":"249","severity":1,"message":"274","line":17,"column":64,"nodeType":"251","endLine":17,"endColumn":97,"suggestions":"283"},{"ruleId":"249","severity":1,"message":"274","line":23,"column":8,"nodeType":"251","endLine":23,"endColumn":41,"suggestions":"284"},{"ruleId":"249","severity":1,"message":"274","line":27,"column":8,"nodeType":"251","endLine":27,"endColumn":41,"suggestions":"285"},{"ruleId":"228","severity":1,"message":"286","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","'handleServerAppError' is defined but never used.","'completed' is assigned a value but never used.","'handleServerNetworkError' is defined but never used.","'AnyAction' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Users' is defined but never used.","'getAllUsersFirestoreTC' is defined but never used.","'createUserTC' is defined but never used.","'CCardFooter' is defined but never used.","'Dashboard' is defined but never used.","'LinearProgress' is defined but never used.","'GroupsUsers' is assigned a value but never used.","'cl' is defined but never used.","'DenseTable' is defined but never used.","'deleteGroup' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["289"],["290"],"'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["291"],"'Container' is defined but never used.","'ChangeEvent' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'props.uid'. Either include them or remove the dependency array.",["292"],"'addTodolistTC' is defined but never used.","'removeTodolistTC' is defined but never used.","'isLoggedIn' is assigned a value but never used.",["293"],["294"],["295"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["296"],["297"],["298"],["299"],["300"],["301"],["302"],["303"],["304"],["305"],["306"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"307","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"310","fix":"314"},{"desc":"310","fix":"315"},{"desc":"310","fix":"316"},{"desc":"317","fix":"318"},{"desc":"317","fix":"319"},{"desc":"317","fix":"320"},{"desc":"317","fix":"321"},{"desc":"317","fix":"322"},{"desc":"317","fix":"323"},{"desc":"317","fix":"324"},{"desc":"325","fix":"326"},{"desc":"317","fix":"327"},{"desc":"317","fix":"328"},{"desc":"317","fix":"329"},"Update the dependencies array to be: [dispatch, id]",{"range":"330","text":"331"},{"range":"332","text":"331"},"Update the dependencies array to be: [dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [dispatch, email, name, phone, props.uid]",{"range":"335","text":"336"},{"range":"337","text":"334"},{"range":"338","text":"334"},{"range":"339","text":"334"},"Update the dependencies array to be: [props]",{"range":"340","text":"341"},{"range":"342","text":"341"},{"range":"343","text":"341"},{"range":"344","text":"341"},{"range":"345","text":"341"},{"range":"346","text":"341"},{"range":"347","text":"341"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"348","text":"349"},{"range":"350","text":"341"},{"range":"351","text":"341"},{"range":"352","text":"341"},[1723,1733],"[dispatch, id]",[1924,1934],[1376,1378],"[dispatch]",[2625,2645],"[dispatch, email, name, phone, props.uid]",[1756,1758],[2232,2234],[2551,2553],[2725,2727],"[props]",[2872,2882],[1508,1542],[1773,1819],[1918,1957],[2060,2099],[2208,2247],[733,743],"[dispatch, props.id]",[775,808],[1087,1120],[1277,1310]]