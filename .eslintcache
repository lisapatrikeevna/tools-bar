[{"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\index.tsx":"1","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\reportWebVitals.ts":"2","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\store.ts":"3","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\App.jsx":"4","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\userReduser.ts":"5","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Dashboard.jsx":"6","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\Api.ts":"7","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groupUsers\\groupsUsers.tsx":"8","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\listItems.jsx":"9","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Chart.jsx":"10","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Deposits.jsx":"11","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Orders.jsx":"12","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\starting.jsx":"13","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Title.jsx":"14","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\appReduserOld.js":"15","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\tasksReduser.ts":"16","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\todolists-reducer.ts":"17","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\app-reducer.ts":"18","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\authReducer.ts":"19","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\utils\\error-utils.ts":"20","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\user\\user.tsx":"21","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\pages\\login\\Login.js":"22","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\pages\\register\\Register.js":"23","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\common\\EditableSpan.tsx":"24","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groups\\groups.tsx":"25","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groups\\group.tsx":"26"},{"size":1183,"mtime":1614441416029,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1612565314468,"results":"29","hashOfConfig":"28"},{"size":773,"mtime":1613447907106,"results":"30","hashOfConfig":"28"},{"size":1738,"mtime":1614764004547,"results":"31","hashOfConfig":"28"},{"size":7649,"mtime":1614729494442,"results":"32","hashOfConfig":"28"},{"size":7203,"mtime":1614524141831,"results":"33","hashOfConfig":"28"},{"size":5081,"mtime":1614764081910,"results":"34","hashOfConfig":"28"},{"size":1918,"mtime":1614729494457,"results":"35","hashOfConfig":"28"},{"size":2490,"mtime":1614558770291,"results":"36","hashOfConfig":"28"},{"size":1429,"mtime":1612623836152,"results":"37","hashOfConfig":"28"},{"size":847,"mtime":1612111362000,"results":"38","hashOfConfig":"28"},{"size":2351,"mtime":1612111362000,"results":"39","hashOfConfig":"28"},{"size":1533,"mtime":1612630345203,"results":"40","hashOfConfig":"28"},{"size":356,"mtime":1612625632421,"results":"41","hashOfConfig":"28"},{"size":301,"mtime":1612639101681,"results":"42","hashOfConfig":"28"},{"size":6687,"mtime":1613529036574,"results":"43","hashOfConfig":"28"},{"size":4673,"mtime":1613448513302,"results":"44","hashOfConfig":"28"},{"size":2383,"mtime":1613449007035,"results":"45","hashOfConfig":"28"},{"size":1999,"mtime":1613449590988,"results":"46","hashOfConfig":"28"},{"size":761,"mtime":1613449590995,"results":"47","hashOfConfig":"28"},{"size":3613,"mtime":1614738266868,"results":"48","hashOfConfig":"28"},{"size":3819,"mtime":1614673860629,"results":"49","hashOfConfig":"28"},{"size":3525,"mtime":1614524390187,"results":"50","hashOfConfig":"28"},{"size":943,"mtime":1614533567650,"results":"51","hashOfConfig":"28"},{"size":1394,"mtime":1614558024850,"results":"52","hashOfConfig":"28"},{"size":1093,"mtime":1614723485331,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1j88pd3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\index.tsx",[],["120","121"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\reportWebVitals.ts",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\store.ts",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\App.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\userReduser.ts",["122","123"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Dashboard.jsx",["124"],"import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {mainListItems, secondaryListItems} from './listItems';\nimport {Switch, Route, Redirect, NavLink} from \"react-router-dom\"\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {signOutTC} from \"../../../bll/userReduser\";\nimport HomeIcon from '@material-ui/icons/Home';\n\n// import Route from \"react-router-dom\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\n// Pages\nconst Starting = React.lazy(() => import('../../views/starting'));\nconst GroupsUsers = React.lazy(() => import('../../views/groupUsers/groupsUsers'));\n// const Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\n// const Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\n\nexport default function Dashboard() {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const submitSignOut = () => {\n        dispatch(signOutTC())\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen}\n                                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Dashboard\n                    </Typography>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <NotificationsIcon/>\n                        </Badge>\n                    </IconButton>\n                    <Button onClick={submitSignOut}>signin</Button>\n                    <NavLink to={'https://lisapatrikeevna.github.io/dragan-2/'} title={'to site'}> <HomeIcon/></NavLink>\n                </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}\n                    classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),}}>\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>{mainListItems}</List>\n                <Divider/>\n                <List>{secondaryListItems}</List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <React.Suspense fallback={'...loading'}>\n                        <Switch>\n                            {/*<Route path=\"/\"  render={props => <Starting {...props}/>} />*/}\n                            <Route path=\"/starting\" render={props => <Starting {...props}/>}/>\n                            <Route path=\"/groupsUsers\" render={props => <GroupsUsers {...props}/>}/>\n                            {/*    /!*<Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />*!/*/}\n                            {/*    /!*<Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />*!/*/}\n                        </Switch>\n                    </React.Suspense>\n                    <Box pt={4}>\n                        <Copyright/>\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n",["125","126"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\Api.ts",["127"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groupUsers\\groupsUsers.tsx",["128","129","130","131","132"],"import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {removeUserTC, setUserOnGroupAC, setUserOnGroupTC, setUsersTC, userType} from \"../../../bll/userReduser\";\nimport {AppRootStateType} from \"../../../bll/store\";\nimport User from \"../user/user\";\nimport Group from \"../groups/group\";\nimport cl from './groupUsers.module.css';\nimport Groups from \"../groups/groups\";\n\nconst GroupsUsers = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        // debugger\n        dispatch(setUsersTC())\n        // const db = admin.database();\n        // const ref = db.ref(\"restricted_access/secret_document\");\n        // ref.once(\"value\", function(snapshot) {\n        //     console.log(snapshot.val());\n        // });\n    }, [dispatch])\n    const removeUser = useCallback(function (uid: string) {\n        const action = removeUserTC(uid);\n        dispatch(action);\n    }, []);\n    const addUserToGroup=(uid:string,groupName:string)=>{\n        debugger\n        dispatch(setUserOnGroupAC({id:uid, groupName}))\n    }\n\n    const allUsers = useSelector<AppRootStateType, Array<userType>>(state => state.users.users)\n    const user = allUsers.map(u => <User key={u.uid} group={u.group} name={u.displayName} date={u.tokensValidAfterTime}\n                                         email={u.email} listTasks={u.listTasks} uid={u.uid} removeUser={removeUser}\n                                         addUserToGroup={addUserToGroup} phoneNumber={u.phoneNumber}/>)\n    console.log(allUsers);\n\n    return (\n        <div>\n            <h5>all users: </h5>\n            <p>Ð¿Ñ. ÑÑÐ¾Ð± Ð¾Ð±Ð½Ð¾Ð²Ð¸ÑÑ Ð¿Ð¾Ð»Ñ( email Ð¸ name ) Ð´Ð°Ð±Ð»ÐºÐ»Ð¸Ðº Ð¸ Ð°Ð¿Ð´ÐµÐ¹Ñ</p>\n            <div className={cl.wrap}>{user}</div>\n            <Groups/>\n        </div>\n    );\n};\n\nexport default GroupsUsers;\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\listItems.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Chart.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Deposits.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Orders.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\starting.jsx",["133"],"import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chart from \"../components/dashboard/Chart\";\r\nimport Deposits from \"../components/dashboard/Deposits\";\r\nimport Orders from \"../components/dashboard/Orders\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst Starting = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    return (\r\n        <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper className={fixedHeightPaper}>\r\n                    <Chart />\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaper}>\r\n                    <Deposits />\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <Orders />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Starting;","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\components\\dashboard\\Title.jsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\appReduserOld.js",["134"],"import {Dispatch} from \"redux\";\n//import * as admin from 'firebase-admin';\n\nconst initialState = {\n  token: ''\n}\n\nexport const changeStateReducer = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return {...state, ...rest }\n    default:\n      return state\n  }\n}\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\tasksReduser.ts",["135","136","137"],"import {Dispatch} from \"redux\";\nimport {TaskPriorities, TaskStatuses, TaskType, UpdateTaskModelType, Users} from \"./Api\";\nimport {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from \"./todolists-reducer\";\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\n\n\nexport type UpdateDomainTaskModelType = {\n    title?: string\n    description?: string\n    status?: TaskStatuses\n    priority?: TaskPriorities\n    startDate?: string\n    deadline?: string\n}\nexport type TasksStateType = {\n    [key: string]: Array<TaskType>\n}\ntype ActionsType =\n    | ReturnType<typeof removeTaskAC>\n    | ReturnType<typeof addTaskAC>\n    | ReturnType<typeof updateTaskAC>\n    | AddTodolistActionType\n    | RemoveTodolistActionType\n    | SetTodolistsActionType\n    | ReturnType<typeof setTasksAC>\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\n\n\nconst initialState: TasksStateType = {}\n\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\n    switch (action.type) {\n        case 'REMOVE-TASK':\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\n        case 'ADD-TASK':\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\n        case 'UPDATE-TASK':\n            return {\n                ...state,\n                [action.todolistId]: state[action.todolistId]\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\n            }\n        case 'ADD-TODOLIST':\n            return {...state, [action.todolist.id]: []}\n        case 'REMOVE-TODOLIST':\n            const copyState = {...state}\n            delete copyState[action.id]\n            return copyState\n        case 'SET-TODOLISTS': {\n            const copyState = {...state}\n            action.todolists.forEach(tl => {\n                copyState[tl.id] = []\n            })\n            return copyState\n        }\n        case 'SET-TASKS':\n            return {...state, [action.todolistId]: action.tasks}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\nexport const addTaskAC = (task: TaskType) =>\n    ({type: 'ADD-TASK', task} as const)\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\n\n// thunks\n// export const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\n//     dispatch(setAppStatusAC('loading'))\n//     todolistsAPI.getTasks(todolistId)\n//         .then((res) => {\n//             const tasks = res.data.items\n//             dispatch(setTasksAC(tasks, todolistId))\n//             dispatch(setAppStatusAC('succeeded'))\n//         })\n// }\n// export const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\n//     todolistsAPI.deleteTask(todolistId, taskId)\n//         .then(res => {\n//             const action = removeTaskAC(taskId, todolistId)\n//             dispatch(action)\n//         })\n// }\n// export const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\n//     dispatch(setAppStatusAC('loading'))\n//     todolistsAPI.createTask(todolistId, title)\n//         .then(res => {\n//             if (res.data.resultCode === 0) {\n//                 const task = res.data.data.item\n//                 const action = addTaskAC(task)\n//                 dispatch(action)\n//                 dispatch(setAppStatusAC('succeeded'))\n//             } else {\n//                 handleServerAppError(res.data, dispatch);\n//             }\n//         })\n//         .catch((error) => {\n//             handleServerNetworkError(error, dispatch)\n//         })\n// }\n// export const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\n//     (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\n//         const state = getState()\n//         const task = state.tasks[todolistId].find(t => t.id === taskId)\n//         if (!task) {\n//             //throw new Error(\"task not found in the state\");\n//             console.warn('task not found in the state')\n//             return\n//         }\n//\n//         const apiModel: UpdateTaskModelType = {\n//             deadline: task.deadline,\n//             description: task.description,\n//             priority: task.priority,\n//             startDate: task.startDate,\n//             title: task.title,\n//             status: task.status,\n//             ...domainModel\n//         }\n//\n//         todolistsAPI.updateTask(todolistId, taskId, apiModel)\n//             .then(res => {\n//                 if (res.data.resultCode === 0) {\n//                     const action = updateTaskAC(taskId, domainModel, todolistId)\n//                     dispatch(action)\n//                 } else {\n//                     handleServerAppError(res.data, dispatch);\n//                 }\n//             })\n//             .catch((error) => {\n//                 handleServerNetworkError(error, dispatch);\n//             })\n//     }\n\n\nexport const setUsersAC = (payload: any) => ({type: 'SET-USERS', payload} as const)\nexport const setGroupsAC = (payload: any) => ({type: 'SET-GROUPS', payload} as const)\nexport const addGroupsAC = (payload: any) => ({type: 'ADD-GROUPS', payload} as const)\n//export const setUsersTC = (payload:any) =>({type: 'SET-USERS',payload}as const)\n// export const setTasksTC = () => (dispatch:Dispatch) =>{\n//   const tasks =firebase.database().ref('tasks')\n//   tasks.on('value',(el)=>{\n//     dispatch(setUsers(el.val()))\n//     // let aaa = el.val()\n//     // console.log(aaa);\n//   })\n// }\nexport const setUsersTC = () => (dispatch: Dispatch) => {\n    Users.getAllUsers()\n        .then(res => {\n                dispatch(setUsersAC(res.data.users))\n            }\n        )\n}\nexport const setTasksTC = () => (dispatch: Dispatch) => {\n    Users.getAllUsers()\n        .then(res => {\n                dispatch(setUsersAC(res.data.users))\n            }\n        )\n}\n// export const addGroups = (id: string, name: string) => (dispatch: Dispatch) => {\n//     debugger\n//     Users.addGroup(id, name)\n//         .then(res => {\n//             debugger\n//             dispatch(setGroupsAC(res.data))\n//         })\n// }","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\todolists-reducer.ts",["138","139","140"],"import {Dispatch} from 'redux'\r\nimport {TodolistType} from \"./Api\";\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\n// export const fetchTodolistsTC = () => {\r\n//     return (dispatch: ThunkDispatch) => {\r\n//         dispatch(setAppStatusAC('loading'))\r\n//         todolistsAPI.getTodolists()\r\n//             .then((res) => {\r\n//                 dispatch(setTodolistsAC(res.data))\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             })\r\n//     }\r\n// }\r\n// export const removeTodolistTC = (todolistId: string) => {\r\n//     return (dispatch: ThunkDispatch) => {\r\n//         //Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð¼ Ð³Ð»Ð¾Ð±Ð°Ð»ÑÐ½ÑÐ¹ ÑÑÐ°ÑÑÑ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ, ÑÑÐ¾Ð±Ñ Ð²Ð²ÐµÑÑÑ Ð¿Ð¾Ð»Ð¾ÑÐ° Ð¿Ð¾Ð±ÐµÐ¶Ð°Ð»Ð°\r\n//         dispatch(setAppStatusAC('loading'))\r\n//         //Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð¼ ÑÑÐ°ÑÑÑ ÐºÐ¾Ð½ÐºÑÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ´ÑÐ»Ð¸ÑÑÐ°, ÑÑÐ¾Ð±Ñ Ð¾Ð½ Ð¼Ð¾Ð³ Ð·Ð°Ð´Ð¸Ð·ÐµÐ±Ð»Ð¸ÑÑ ÑÑÐ¾ Ð½Ð°Ð´Ð¾\r\n//         dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n//         todolistsAPI.deleteTodolist(todolistId)\r\n//             .then((res) => {\r\n//                 dispatch(removeTodolistAC(todolistId))\r\n//                 //ÑÐºÐ°Ð¶ÐµÐ¼ Ð³Ð»Ð¾Ð±Ð°Ð»ÑÐ½Ð¾ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ, ÑÑÐ¾ Ð°ÑÐ¸Ð½ÑÑÐ¾Ð½Ð½Ð°Ñ Ð¾Ð¿ÐµÑÐ°ÑÐ¸Ñ Ð·Ð°Ð²ÐµÑÑÐµÐ½Ð°\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             })\r\n//     }\r\n// }\r\n// export const addTodolistTC = (title: string) => {\r\n//     return (dispatch: ThunkDispatch) => {\r\n//         dispatch(setAppStatusAC('loading'))\r\n//         todolistsAPI.createTodolist(title)\r\n//             .then((res) => {\r\n//                 dispatch(addTodolistAC(res.data.data.item))\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             })\r\n//     }\r\n// }\r\n// export const changeTodolistTitleTC = (id: string, title: string) => {\r\n//     return (dispatch: Dispatch<ActionsType>) => {\r\n//         todolistsAPI.updateTodolist(id, title)\r\n//             .then((res) => {\r\n//                 dispatch(changeTodolistTitleAC(id, title))\r\n//             })\r\n//     }\r\n// }\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\app-reducer.ts",["141","142"],"import {Dispatch} from \"redux\";\r\nimport {handleServerAppError} from \"../utils/error-utils\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'IS-INIT':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð»Ð¸ ÑÐµÐ¹ÑÐ°Ñ Ð²Ð·Ð°Ð¸Ð¼Ð¾Ð´ÐµÐ¹ÑÑÐ²Ð¸Ðµ Ñ ÑÐµÑÐ²ÐµÑÐ¾Ð¼\r\n    status: RequestStatusType\r\n    // ÐµÑÐ»Ð¸ Ð¾ÑÐ¸Ð±ÐºÐ° ÐºÐ°ÐºÐ°Ñ-ÑÐ¾ Ð³Ð»Ð¾Ð±Ð°Ð»ÑÐ½Ð°Ñ Ð¿ÑÐ¾Ð¸Ð·Ð¾Ð¹Ð´ÑÑ - Ð¼Ñ Ð·Ð°Ð¿Ð¸ÑÐµÐ¼ ÑÐµÐºÑÑ Ð¾ÑÐ¸Ð±ÐºÐ¸ ÑÑÐ´Ð°\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'IS-INIT', isInitialized} as const)\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setIsInitializedACType = ReturnType<typeof setIsInitializedAC>\r\n\r\n\r\n// export const initializeAppTC = () => (dispatch: Dispatch) => {\r\n//     authAPI.me()\r\n//         .then(res => {\r\n//         // debugger\r\n//         if (res.data.resultCode === 0) {\r\n//             dispatch(setIsLoggedInAC(true));\r\n//\r\n//          }\r\n//         else {\r\n//             // debugger\r\n//             // // handleServerAppError(err, dispatch);\r\n//         }\r\n//     })\r\n//         .catch((err) => {\r\n//             handleServerAppError(err, dispatch);\r\n//             dispatch(setIsInitializedAC(true))\r\n//             // throw new Error(err.message)\r\n//         })\r\n//     dispatch(setIsInitializedAC(true))\r\n// }\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | setIsInitializedACType\r\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\bll\\authReducer.ts",["143","144"],"import { Dispatch } from 'redux'\r\nimport {handleServerAppError, handleServerNetworkError} from \"../utils/error-utils\"\r\nimport {LoginParamsType} from \"./Api\";\r\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    // authAPI.login(data).\r\n    //     then(res=>{\r\n    //     if (res.data.resultCode === 0) {\r\n    //         dispatch(setIsLoggedInAC(true))\r\n    //         dispatch(setAppStatusAC('succeeded'))\r\n    //     } else {\r\n    //         handleServerAppError(res.data, dispatch);\r\n    //     }\r\n    // })\r\n    //     .catch((error) => {\r\n    //         handleServerNetworkError(error, dispatch)\r\n    //     })\r\n\r\n}\r\n\r\n// export const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n//     dispatch(setAppStatusAC('loading'))\r\n//     authAPI.logout()\r\n//         .then(res => {\r\n//             if (res.data.resultCode === 0) {\r\n//                 dispatch(setIsLoggedInAC(false))\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             } else {\r\n//                 handleServerAppError(res.data, dispatch)\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             handleServerNetworkError(error, dispatch)\r\n//         })\r\n// }\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType\r\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\utils\\error-utils.ts",[],["145","146"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\user\\user.tsx",["147","148","149","150","151","152","153"],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\pages\\login\\Login.js",["154","155"],"import React, {useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport {\n  CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CForm, CInput,\n  CInputGroup, CInputGroupPrepend, CInputGroupText, CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {createUserTC, loginUserTC} from \"../../../../bll/userReduser\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Login = () => {\n  console.log('login');\n  debugger\n  const status = useSelector(state => state.users.status)\n  const dispatch = useDispatch()\n  let [email, setEmail] = useState('lisa15.08patrikeevana@gmail.com')\n  let [password, setPassword] = useState('lisa15')\n  const createEmail = (e) => {setEmail(e.currentTarget.value)}\n  const createPassword = (e) => {setPassword(e.currentTarget.value)}\n  const HandleLogin = ()=>{\n    dispatch(loginUserTC(email,password))\n    setEmail('')\n    setPassword('')\n  }\n  // if(status){return <Redirect to='/groupsUsers' />}\n  console.log('login page:', status);\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\" onChange={createEmail} value={email}/>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"  value={password} onChange={createPassword}/>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton color=\"primary\" className=\"px-5\" onClick={HandleLogin}>Login</CButton>\n                      </CCol>\n                      {status &&\n                      <CCol xs=\"6\"> <Link to=\"/groupsUsers\">\n                        <CButton color=\"primary\" className=\"px-4\">main</CButton>\n                      </Link> </CCol>}\n                      {/*<CCol xs=\"6\" className=\"text-right\">*/}\n                      {/*  <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>*/}\n                      {/*</CCol>*/}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' , margin: '10px auto'}}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\pages\\register\\Register.js",["156","157"],"import React, {useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createUserTC} from \"../../../../bll/userReduser\";\nimport {Redirect} from \"react-router-dom\";\nimport Dashboard from \"../../../components/dashboard/Dashboard\";\n\nconst Register = () => {\n\n  const userRecord = useSelector(state => state.users.userRecord)\n  const dispatch = useDispatch()\n  let [username,setUsername]=useState('')\n  let [email, setEmail] = useState('')\n  let [password, setPassword] = useState('lisa15')\n  const createUsername = (e) => {\n    setUsername(e.currentTarget.value)\n  }\n  const createEmail = (e) => {\n    setEmail(e.currentTarget.value)\n  }\n  const createPassword = (e) => {\n    setPassword(e.currentTarget.value)\n  }\n  const HandleRegister = ()=>{\n    dispatch(createUserTC(email,password,username))\n    setUsername('')\n    setEmail('')\n    setPassword('')\n  }\n  console.log(userRecord);\n\n  if(userRecord){return <Redirect to='/login' />}\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" value={username} onChange={createUsername}/>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\" onChange={createEmail} value={email}/>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\" value={password} onChange={createPassword}/>\n                  </CInputGroup>\n                  {/*<CInputGroup className=\"mb-4\">*/}\n                  {/*  <CInputGroupPrepend>*/}\n                  {/*    <CInputGroupText>*/}\n                  {/*      <CIcon name=\"cil-lock-locked\" />*/}\n                  {/*    </CInputGroupText>*/}\n                  {/*  </CInputGroupPrepend>*/}\n                  {/*  <CInput type=\"password\" placeholder=\"Repeat password\" autoComplete=\"new-password\" />*/}\n                  {/*</CInputGroup>*/}\n                  <CButton color=\"success\" block onClick={HandleRegister}>Create Account</CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\common\\EditableSpan.tsx",[],"E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groups\\groups.tsx",["158","159"],"import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addGroupsTC, getGroupsTC, groupType, setUsersTC} from \"../../../bll/userReduser\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport Group from \"./group\";\r\nimport {GroupType} from \"../../../bll/Api\";\r\nimport cl from \"../groupUsers/groupUsers.module.css\";\r\n\r\nconst Groups = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getGroupsTC())\r\n    }, [dispatch])\r\n    const allGroups = useSelector<AppRootStateType, Array<GroupType>>(state => state.users.groups)\r\n    const group = allGroups.map(g => <Group key={g.id} id={g.id} name={g.data.group}\r\n                                            users={g.data?.users}\r\n    />)\r\n    let [nGroup, setNumGroup] = useState<string>('')\r\n    const setNewGroup = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNumGroup(e.currentTarget.value)\r\n    }\r\n    const createGroup = () => {\r\n        dispatch(addGroupsTC(nGroup.trim()))\r\n        setNumGroup('')\r\n    }\r\n    return (\r\n        <>\r\n            <p>GroupsUsers:\r\n                <input type=\"text\" value={nGroup} onChange={setNewGroup}/>\r\n                <button onClick={createGroup}>create group</button>\r\n            </p>\r\n            <div className={cl.wrap}>{group}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Groups;","E:\\react\\dragan wrap\\node-fb-admin\\tools-bar\\src\\ui\\views\\groups\\group.tsx",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":6,"column":9,"nodeType":"167","messageId":"168","endLine":6,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":23,"column":6,"nodeType":"167","messageId":"168","endLine":23,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":20,"column":24,"nodeType":"167","messageId":"168","endLine":20,"endColumn":32},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"172","line":184,"column":6,"nodeType":"167","messageId":"168","endLine":184,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"174","line":1,"column":53,"nodeType":"167","messageId":"168","endLine":1,"endColumn":61},{"ruleId":"165","severity":1,"message":"175","line":3,"column":41,"nodeType":"167","messageId":"168","endLine":3,"endColumn":57},{"ruleId":"165","severity":1,"message":"176","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":24,"column":8,"nodeType":"179","endLine":24,"endColumn":10,"suggestions":"180"},{"ruleId":"170","severity":1,"message":"181","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"182","line":1,"column":9,"nodeType":"167","messageId":"168","endLine":1,"endColumn":17},{"ruleId":"165","severity":1,"message":"183","line":2,"column":49,"nodeType":"167","messageId":"168","endLine":2,"endColumn":68},{"ruleId":"165","severity":1,"message":"184","line":26,"column":6,"nodeType":"167","messageId":"168","endLine":26,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":34,"column":94,"nodeType":"187","messageId":"188","endLine":34,"endColumn":96},{"ruleId":"165","severity":1,"message":"189","line":3,"column":28,"nodeType":"167","messageId":"168","endLine":3,"endColumn":42},{"ruleId":"185","severity":1,"message":"186","line":10,"column":45,"nodeType":"187","messageId":"188","endLine":10,"endColumn":47},{"ruleId":"165","severity":1,"message":"184","line":104,"column":6,"nodeType":"167","messageId":"168","endLine":104,"endColumn":19},{"ruleId":"165","severity":1,"message":"182","line":1,"column":9,"nodeType":"167","messageId":"168","endLine":1,"endColumn":17},{"ruleId":"165","severity":1,"message":"190","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":29},{"ruleId":"165","severity":1,"message":"190","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":29},{"ruleId":"165","severity":1,"message":"191","line":2,"column":31,"nodeType":"167","messageId":"168","endLine":2,"endColumn":55},{"ruleId":"161","replacedBy":"192"},{"ruleId":"163","replacedBy":"193"},{"ruleId":"165","severity":1,"message":"194","line":1,"column":42,"nodeType":"167","messageId":"168","endLine":1,"endColumn":51},{"ruleId":"165","severity":1,"message":"195","line":4,"column":9,"nodeType":"167","messageId":"168","endLine":4,"endColumn":25},{"ruleId":"165","severity":1,"message":"175","line":4,"column":27,"nodeType":"167","messageId":"168","endLine":4,"endColumn":43},{"ruleId":"165","severity":1,"message":"196","line":4,"column":59,"nodeType":"167","messageId":"168","endLine":4,"endColumn":67},{"ruleId":"165","severity":1,"message":"197","line":6,"column":17,"nodeType":"167","messageId":"168","endLine":6,"endColumn":22},{"ruleId":"177","severity":1,"message":"198","line":39,"column":7,"nodeType":"179","endLine":39,"endColumn":20,"suggestions":"199"},{"ruleId":"177","severity":1,"message":"200","line":43,"column":7,"nodeType":"179","endLine":43,"endColumn":18,"suggestions":"201"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":15,"nodeType":"167","messageId":"168","endLine":2,"endColumn":23},{"ruleId":"170","severity":1,"message":"202","line":8,"column":9,"nodeType":"167","messageId":"168","endLine":8,"endColumn":21},{"ruleId":"170","severity":1,"message":"203","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"170","severity":1,"message":"204","line":20,"column":8,"nodeType":"167","messageId":"168","endLine":20,"endColumn":17},{"ruleId":"165","severity":1,"message":"205","line":3,"column":35,"nodeType":"167","messageId":"168","endLine":3,"endColumn":44},{"ruleId":"165","severity":1,"message":"206","line":3,"column":46,"nodeType":"167","messageId":"168","endLine":3,"endColumn":56},{"ruleId":"165","severity":1,"message":"207","line":18,"column":11,"nodeType":"167","messageId":"168","endLine":18,"endColumn":17},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'log' is defined but never used.","Identifier","unusedVar","'providerDataType' is defined but never used.","no-unused-vars","'Redirect' is defined but never used.","'GetTasksResponse' is defined but never used.","'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'setUserOnGroupTC' is defined but never used.","'Group' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'Container' is defined but never used.","'Dispatch' is defined but never used.","'UpdateTaskModelType' is defined but never used.","'ThunkDispatch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setAppStatusAC' is defined but never used.","'handleServerAppError' is defined but never used.","'handleServerNetworkError' is defined but never used.",["208"],["209"],"'useEffect' is defined but never used.","'setUserOnGroupAC' is defined but never used.","'userType' is defined but never used.","'Input' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'props.uid'. Either include them or remove the dependency array.",["211"],"React Hook useCallback has missing dependencies: 'name' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["212"],"'createUserTC' is defined but never used.","'CCardFooter' is defined but never used.","'Dashboard' is defined but never used.","'groupType' is defined but never used.","'setUsersTC' is defined but never used.","'update' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},"Update the dependencies array to be: [dispatch, email, name, props.uid]",{"range":"221","text":"222"},"Update the dependencies array to be: [groupName, name, props]",{"range":"223","text":"224"},[955,957],"[dispatch]",[1896,1909],"[dispatch, email, name, props.uid]",[2039,2050],"[groupName, name, props]"]