{"version":3,"sources":["App.jsx","reportWebVitals.ts","index.tsx","bll/appReduserOld.js","bll/authReducer.ts","bll/store.ts","bll/Api.ts","ui/components/dashboard/listItems.jsx","ui/components/common/AddItemForm.tsx","ui/views/todo/task.tsx","ui/views/todo/todo.tsx","ui/views/todo/todoList.tsx","ui/views/groups/groupPage.tsx","ui/components/common/SmalAlert.tsx","ui/components/dashboard/Dashboard.jsx","ui/views/groups/group.tsx","ui/views/groups/groups.tsx","ui/views/users/user.tsx","ui/views/users/users.tsx","ui/views/pages/page404/Page404.jsx","ui/views/groupUsers/groupUsers.module.css","bll/app-reducer.ts","ui/views/users/user.module.css","bll/groupReduser.ts","bll/userReduser.ts","utils/error-utils.ts","bll/tasksReduser.ts","ui/route.ts","ui/components/common/EditableSpan.tsx","bll/todolists-reducer.ts"],"names":["Login","React","lazy","Register","Page404","Page500","App","dispatch","useDispatch","useEffect","authTC","useSelector","state","users","status","className","Suspense","fallback","exact","path","render","name","props","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","store","document","getElementById","initialState","token","isLoggedIn","rootReducer","combineReducers","groups","groupReducer","userReducer","nav","type","rest","tasks","tasksReducer","todoList","todolistsReducer","appReducer","auth","action","value","createStore","applyMiddleware","thunkMiddleware","window","TaskStatuses","TaskPriorities","instance","axios","create","baseURL","GroupsApi","getGroups","get","r","data","addGroup","id","post","groupRemove","delete","getGroupById","addUserOnGroup","user","addTodoOnGroup","todoId","removeUserFromGroup","uid","put","removeTodoFromGroup","Users","getAllUsers","getAllUsersFirestore","u","updateUser","payload","userRemove","createUser","email","password","username","displayName","addUserData","deleteGroupFromUserData","todolistsAPI","getTodolists","createTodolist","title","addedDate","order","deleteTodolist","getTasks","todolistId","deleteTask","task","createTask","addTask","description","priority","startDate","deadline","todoListId","updateTask","taskId","model","updateTodolist","Tasks","getAllTasks","addTodo","taskRemove","mainListItems","ListItem","button","to","style","display","ListItemIcon","ListItemText","primary","PATH","GROUPS","CollectionsBookmark","USERS","secondaryListItems","ListSubheader","inset","AddItemForm","memo","addItem","disabled","useState","setTitle","error","setError","addItemHandler","trim","TextField","variant","onChange","e","currentTarget","onKeyPress","charCode","label","helperText","IconButton","color","onClick","AddBox","Task","onClickHandler","useCallback","removeTask","onChangeHandler","newIsDoneValue","checked","changeTaskStatus","Completed","New","onTitleChangeHandler","newValue","changeTaskTitle","Checkbox","EditableSpan","Delete","Todolist","fetchTasksTC","todolist","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasksForTodolist","filter","t","removeTodolist","entityStatus","map","paddingTop","Button","TodolistsList","fetchTodolistsTC","todolists","groupTodo","todolistFromGroup","tlG","find","todo","removeTaskTC","addTaskTC","changeStatus","newTitle","updateTaskTC","changeTodolistTitleTC","addTodolist","Grid","container","padding","length","spacing","tl","allTodolistTasks","item","Paper","GroupPage","useParams","getGroupByIdTC","group","activeGroup","removeUserFromGroupTC","removeGroupFromUserDataTC","addTodolistTC","removeTodolistTC","removeTodolistFromGroupTC","cl","box","todoLists","Alert","elevation","useStyles","makeStyles","theme","root","width","marginTop","SmallAlert","message","classes","open","handleClose","event","reasons","setAppErrorAC","Snackbar","autoHideDuration","onClose","severity","Copyright","Typography","align","Link","href","Date","getFullYear","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingBottom","paper","flexDirection","fixedHeight","height","Starting","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","aria-label","component","noWrap","Badge","badgeContent","signOutTC","Drawer","Divider","List","LinearProgress","Container","maxWidth","PAGEGROUP","ERROR404","Box","pt","Group","deleteGroup","removeGroupsTC","TableRow","TableCell","scope","getUrl","head","backgroundColor","palette","common","black","white","table","minWidth","Groups","getGroupsTC","allGroups","nGroup","setNumGroup","g","addGroupsTC","TableContainer","Table","size","TableHead","TableBody","createStyles","formControl","margin","selectEmpty","User","admin","adminUid","curentUser","userid","groupID","setGroupID","setName","setEmail","phoneNumber","phone","setPhone","update","updateUserTC","spanWrap","large","wrap","medium","groupId","removeUser","spaceBetween","FormControl","Select","labelId","target","listGroup","FormHelperText","addUserToGroup","small","groupName","listTasks","setUsersTC","removeUserTC","userName","setUserOnGroupTC","allUsers","date","tokensValidAfterTime","md","placeholder","module","exports","isInitialized","setAppStatusAC","initState","userRecord","res","console","log","uuid","currentUser","authAC","setUserAdditionalInformationAC","onAuthStateChanged","createUserTC","alert","a","infoUser","loginUserTC","signInWithEmailAndPassword","catch","er","signOut","handleServerNetworkError","updatedTask","copyState","forEach","removeTaskAC","setTasksAC","toDateString","getState","updatedTaskModel","updateTaskAC","messages","handleServerAppError","warn","LOGIN","REGISTRATION","ERROR500","PASS_RECOVERY","PASS_NEW","editMode","setEditMode","setItem","autoFocus","onBlur","onDoubleClick","changeTodolistTitleAC"],"mappings":"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","file":"static/js/main.c79d643a.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport './App.css'\nimport Dashboard from \"./ui/components/dashboard/Dashboard\";\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authTC} from \"./bll/userReduser\";\n// import Login from \"./ui/views/pages/login/Login\";\n\n\n// Pages\nconst Login = React.lazy(() => import('./ui/views/pages/login/Login'));\nconst Register = React.lazy(() => import('./ui/views/pages/register/Register'));\nconst Page404 = React.lazy(() => import('./ui/views/pages/page404/Page404'));\n const Page500 = React.lazy(() => import('./ui/views/pages/page500/Page500'));\nfunction App() {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(authTC())\n    }, [dispatch])\n    const status = useSelector(state => state.users.status)\n   // if (!status) {return <Redirect to={'/login'}/>}\n    // else {return <Redirect to={'/groupsUsers'}/>}\n\n    return (\n        <div className=\"App\">\n            <React.Suspense fallback={'...loading'}>\n                <Switch>\n                    <Route exact path=\"/login\" render={() => <Login/>}/>\n                    <Route exact path=\"/register\" render={() => <Register/>}/>\n                    {/*<Route exact path=\"/dashboard\" render={() => <Dashboard/>}/>*/}\n                    <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n                    <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n                    {/*<Route path=\"/\" name=\"Home\" render={props => <TheLayout {...props}/>} />*/}\n                    <Dashboard/>\n                </Switch>\n            </React.Suspense>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport firebase from \"firebase\"\nimport 'firebase/auth'\n\n\nexport const app=firebase.initializeApp({\n    apiKey: \"AIzaSyDGqV4nDHMokspRbNj9OufL531PwdNB2sc\",\n    authDomain: \"fir-silky.firebaseapp.com\",\n    databaseURL: \"https://fir-silky-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"fir-silky\",\n    storageBucket: \"fir-silky.appspot.com\",\n    messagingSenderId: \"459950163847\",\n    appId: \"1:459950163847:web:bcbb780902e981920cb522\"\n})\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n            <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\n\nconst initialState = {\n  token: ''\n}\n\nexport const changeStateReducer = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return {...state, ...rest }\n    default:\n      return state\n  }\n}\n","import { Dispatch } from 'redux'\r\nimport {handleServerAppError, handleServerNetworkError} from \"../utils/error-utils\"\r\nimport {LoginParamsType} from \"./Api\";\r\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    // authAPI.login(data).\r\n    //     then(res=>{\r\n    //     if (res.data.resultCode === 0) {\r\n    //         dispatch(setIsLoggedInAC(true))\r\n    //         dispatch(setAppStatusAC('succeeded'))\r\n    //     } else {\r\n    //         handleServerAppError(res.data, dispatch);\r\n    //     }\r\n    // })\r\n    //     .catch((error) => {\r\n    //         handleServerNetworkError(error, dispatch)\r\n    //     })\r\n\r\n}\r\n\r\n// export const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n//     dispatch(setAppStatusAC('loading'))\r\n//     authAPI.logout()\r\n//         .then(res => {\r\n//             if (res.data.resultCode === 0) {\r\n//                 dispatch(setIsLoggedInAC(false))\r\n//                 dispatch(setAppStatusAC('succeeded'))\r\n//             } else {\r\n//                 handleServerAppError(res.data, dispatch)\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             handleServerNetworkError(error, dispatch)\r\n//         })\r\n// }\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {userReducer} from \"./userReduser\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {changeStateReducer} from \"./appReduserOld\";\nimport {tasksReducer} from \"./tasksReduser\";\nimport {todolistsReducer} from \"./todolists-reducer\";\nimport {appReducer} from \"./app-reducer\";\nimport {authReducer} from \"./authReducer\";\nimport { groupReducer } from './groupReduser';\n\nconst rootReducer = combineReducers({\n    groups: groupReducer,\n    users: userReducer,\n    nav: changeStateReducer,\n    tasks: tasksReducer,\n    todoList: todolistsReducer,\n    app: appReducer,\n    auth: authReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n//@ts-ignore\nwindow.store=store\nexport default store\n","import axios from 'axios'\nimport {groupUsersType} from \"./groupReduser\";\nimport {UpdatedTaskType} from \"./tasksReduser\";\n\nconst instance = axios.create({\n    baseURL: 'https://dragan.lisa15.ru/',\n    // baseURL: 'http://localhost:7563/',\n})\n\n\nexport type GroupDataType = {\n    group: string\n    users: groupUsersType[]\n    todoLists: Array<any>\n}\nexport type GroupType = {\n    data: GroupDataType\n    id: string\n}\nexport type userFirestoreType = {\n    id?: string\n    name: string\n    uid: string\n    listTasks?: any\n}\nexport type UserType = {\n    user: userFirestoreType\n}\nexport type FireBaseResponse<T> = {\n    id: string\n    data: T\n}\nexport const GroupsApi = {\n    getGroups() {\n        return instance.get<Array<GroupType>>('api/getGroups').then(r => r.data)\n    },\n    addGroup(id: string, name: string) {\n        return instance.post('api/createGroup', {id, name})\n    },\n    groupRemove(id: string) {\n        return instance.delete(`groupRemove/${id}`)\n    },\n    getGroupById(id: string) {\n        return instance.get(`api/getGroupById/${id}`).then(r => r.data)\n    },\n    addUserOnGroup(id: string, user: groupUsersType) {\n        return instance.post(`api/addUserOnGroup/${id}`, {user})\n    },\n    addTodoOnGroup(id: string, todoId: string) {\n        return instance.post(`api/addTodolistsOnGroup/${id}`, {todoId})\n    },\n    removeUserFromGroup(id: string,{uid, name}: groupUsersType){\n        return instance.put(`api/deleteUserFromGroup/${id}`, {uid,name})\n    },\n    removeTodoFromGroup(id: string,todoId:string){\n        return instance.put(`api/deleteTodoListFromGroup/${id}`, {todoId})\n    },\n}\nexport const Users = {\n    getAllUsers() {\n        return instance.get('users/1')\n    },\n    getAllUsersFirestore() {\n        return instance.get<Array<FireBaseResponse<UserType>>>('api/getUsers').then(u => u.data)\n    },\n    auth() {\n        return instance.get('auth')\n    },\n    updateUser(uid: string, payload: { email?: string, phoneNumber?: string,disabled?:false, nickName?: string }) {\n        return instance.put(`userUpdate/${uid}`, {payload})\n    },\n    userRemove(uid: string) {\n        return instance.delete(`userRemove/${uid}`)\n    },\n    createUser(email: string, password: string, username: string) {\n        return instance.post(`createUser`, {email, password, displayName: username})\n    },\n    addUserData(uid: string, id: string, name: string) {\n        return instance.post(`api/addUserData`, {uid, id, name})\n    },\n    deleteGroupFromUserData(uid: string) {\n        return instance.put(`api/deleteGroupFromUserData/${uid}`)\n    },\n}\nexport type TodoslistType = {\n    id: string\n    data:{\n        title: string\n        addedDate: string\n        order: number\n    }\n}\nexport type taskFirebaseType={\n   [ id:string]: TaskType\n}\nexport const todolistsAPI = {\n    getTodolists() {\n        return  instance.get<TodoslistType[]>('api/getTodolists').then(r => r.data);\n    },\n    createTodolist(id:string,title:string,addedDate:string,order:number) {\n        return  instance.post<ResponseType<{ item: TodoslistType }>>('api/todoLists/create', {id,title,addedDate,order});\n    },\n    deleteTodolist(id: string) {\n        return instance.delete<ResponseType>(`api/deleteTodolist/${id}`);\n    },\n\n    getTasks(todolistId: string) {\n        return instance.get<GetTasksResponse>(`api/getTodolists/${todolistId}/tasks`);\n    },\n    // deleteTask(taskId: string,todolistId: string) {\n    deleteTask(todolistId: string,task: TaskType) {\n        //!!!!!!!\n        debugger\n        return instance.put<ResponseType>(`api/Todolists/${todolistId}/removeTasks`,task);\n    },\n    createTask(todolistId: string) {\n        // debugger\n        return instance.post<ResponseType>(`api/todoLists/create/${todolistId}/tasks`);\n    },\n    addTask(todolistId: string, { description,title, status, priority, startDate, deadline, id, todoListId, order, addedDate}:TaskType) {\n       // debugger\n        return instance.post<firebasePostResponseType>(`api/todoLists/add/${todolistId}/tasks`, {description,title,  status, priority, startDate, deadline, id, todolistId, order, addedDate});\n    },\n    // addTask(todolistId: string, data:taskFirebaseType) {\n    //     debugger\n    //     return instance.post<firebasePostResponseType>(`api/todoLists/add/${todolistId}/tasks`, data);\n    // },\n//dont used\n    updateTask(todolistId: string, taskId: string, model: TaskType) {\n        return instance.put<ResponseType<TaskType>>(`todo-lists/${todolistId}/udateTasks/${taskId}`, model);\n    },\n    updateTodolist(id: string, title: string) {\n        const promise = instance.put<ResponseType>(`api/getTodolists/${id}`, {title: title});\n        return promise;\n    },\n}\nexport const Tasks = {\n    getAllTasks() {\n        // const promise = instance.get('users');\n        // return promise;\n        // debugger\n        return instance.get('users')\n    },\n    getGroups() {\n        // const promise = instance.get('users');\n        // return promise;\n        // debugger\n        return instance.get('api/get')\n    },\n    addTodo(id: string, name: string) {\n        debugger\n        return instance.post('api/todoLists/create', {id, name})\n    },\n    taskRemove(id:string){\n        return instance.delete(`taskRemove/${id}`)\n    }\n}\n\n// types\nexport type LoginParamsType = {\n    password: string\n    email: string\n    rememberMy?: boolean\n}\nexport type myResponseType = {\n    id: number\n    email: string\n    login: string\n}\n\nexport type ResponseType<D = {}> = {\n    // resultCode: number\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    data?: D\n}\n\nexport enum TaskStatuses {\n    New = 0,\n    InProgress = 1,\n    Completed = 2,\n    Draft = 3\n}\n\nexport enum TaskPriorities {\n    Low = 0,\n    Middle = 1,\n    Hi = 2,\n    Urgently = 3,\n    Later = 4\n}\n\nexport type TaskType = {\n    description: string\n    title: string\n    status: TaskStatuses\n    priority: TaskPriorities\n    startDate: string\n    deadline: string\n    id: string\n    todoListId: string\n    order: number\n    addedDate: string\n}\nexport type UpdateTaskModelType = {\n    title: string\n    description: string\n    status: TaskStatuses\n    priority: TaskPriorities\n    startDate: string\n    deadline: string\n}\ntype GetTasksResponse = {\n    // error: string | null\n    // totalCount: number\n    // task: TaskType[]\n}\ntype firebasePostResponseType = {\n    data:string\n    status:number\n    statusText:string\n}\n//import * as admin from 'firebase-admin';\n//const serviceAccount = require(\"../fir-silky-firebase-adminsdk-6l12p-2bc5e41df4.json\");\n\n//const app = admin.initializeApp();\n// admin.initializeApp({\n//     credential: admin.credential.applicationDefault(),\n//   //credential: admin.credential.cert(serviceAccount),\n//   databaseURL: \"https://fir-silky-default-rtdb.europe-west1.firebasedatabase.app\"\n// });\n// const adminId = 'lisa-fox'\n// admin.auth().createCustomToken(adminId)\n//     .then((customToken)=>{\n//       console.log(customToken);\n//     })\n//     .catch((error)=>{\n//       console.log(error);\n//     })\n\n//https://firebase.google.com/docs/cloud-messaging/auth-server\n//!!!!! https://firebase.google.com/docs/auth/admin/manage-users\n//https://firebase.google.com/docs/database/admin/start/?hl=ru-ru#node.js\n// export const listAllUsers = (nextPageToken) => {\n//   // List batch of users, 1000 at a time.\n//   admin\n//       .auth()\n//       .listUsers(1000, nextPageToken)\n//       .then((listUsersResult) => {\n//           debugger\n//         listUsersResult.users.forEach((userRecord) => {\n//           console.log('users', userRecord.toJSON());\n//         });\n//         if (listUsersResult.pageToken) {\n//           // List next batch of users.\n//           listAllUsers(listUsersResult.pageToken);\n//         }\n//       })\n//       .catch((error) => {\n//         console.log('Error listing users:', error);\n//       });\n//};\n// Start listing users from the beginning, 1000 at a time.\n//listAllUsers();\n//delet \"firebase\": \"^8.2.6\",\n\n//const serviceAccount = require(\"path/to/serviceAccountKey.json\");\n// export const firebaseConfig={\n//   apiKey: \"AIzaSyDGqV4nDHMokspRbNj9OufL531PwdNB2sc\",\n//   authDomain: \"fir-silky.firebaseapp.com\",\n//   databaseURL: \"https://fir-silky-default-rtdb.europe-west1.firebasedatabase.app\",\n//   projectId: \"fir-silky\",\n//   storageBucket: \"fir-silky.appspot.com\",\n//   messagingSenderId: \"459950163847\",\n//   appId: \"1:459950163847:web:2f94e0b34b0c77d10cb522\"\n// }\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {NavLink} from \"react-router-dom\";\nimport {CollectionsBookmark} from \"@material-ui/icons\";\nimport {PATH} from \"../../route\";\n\n\n// <div className={`${s.item} ${s.active}`}>\n//     <NavLink to={PATH.LOGIN} activeClassName={s.active}>Login</NavLink>\n//     <NavLink to={PATH.LOGOUT} activeClassName={s.active}>Logout</NavLink>\n//     <NavLink to={PATH.REGISTRATION} activeClassName={s.active}>Registration</NavLink>\n//     <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\n//     <NavLink to={PATH.PASS_RECOVERY} activeClassName={s.active}>Password recovery</NavLink>\n//     <NavLink to={PATH.PASS_NEW} activeClassName={s.active}>Entering new password</NavLink>\n//     <NavLink to={PATH.TEST} activeClassName={s.active}>Test</NavLink>\n//     <NavLink to={PATH.PACKS} activeClassName={s.active}>Packs</NavLink>\n//     <NavLink to={'/cards/:id'} activeClassName={s.active}>Cards</NavLink>\n//     <NavLink to={'/learn/:id'} activeClassName={s.active}>Learn</NavLink>\n// </div>\nexport const mainListItems = (\n    <div>\n        <ListItem button>\n            <NavLink to='/starting' style={{display: 'flex'}}>\n                <ListItemIcon>\n                    <DashboardIcon/>\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\"/>\n            </NavLink>\n        </ListItem>\n        <ListItem button>\n            <NavLink to={PATH.GROUPS} style={{display: 'flex'}}>\n                <ListItemIcon>\n                    <CollectionsBookmark/>\n                </ListItemIcon>\n                <ListItemText primary=\"Groups\"/>\n            </NavLink>\n        </ListItem>\n        <ListItem button>\n            <NavLink to={PATH.USERS} style={{display: 'flex'}}>\n                <ListItemIcon>\n                    <PeopleIcon/>\n                </ListItemIcon>\n                <ListItemText primary=\"Users\"/>\n            </NavLink>\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <ShoppingCartIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\"/>\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <BarChartIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\"/>\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <LayersIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Integrations\"/>\n        </ListItem>\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\"/>\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\"/>\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\"/>\n        </ListItem>\n    </div>\n);\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport { IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    // console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {EditableSpan} from \"../../components/common/EditableSpan\";\r\nimport {TaskStatuses, TaskType} from \"../../../bll/Api\";\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string,task: TaskType) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => {\r\n        debugger\r\n    return props.removeTask(props.task.id, props.todolistId,props.task)}, [props.task.id, props.todolistId]\r\n    );\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","import React, {useCallback, useEffect} from 'react'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {useDispatch} from 'react-redux'\r\nimport {FilterValuesType, TodolistDomainType} from \"../../../bll/todolists-reducer\";\r\nimport {TaskStatuses, TaskType} from \"../../../bll/Api\";\r\nimport {EditableSpan} from \"../../components/common/EditableSpan\";\r\nimport {AddItemForm} from \"../../components/common/AddItemForm\";\r\nimport {Task} from \"./task\";\r\nimport { fetchTasksTC } from '../../../bll/tasksReduser';\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string,task: TaskType) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n}\r\n\r\nexport const Todolist = React.memo(function ({ ...props}: PropsType) {\r\n    // console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksTC(props.todolist.id))\r\n    }, [dispatch,props.todolist.id])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n    // console.log(props.tasks);\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {tasksForTodolist && tasksForTodolist.map(t => {\r\n\r\n                return(\r\n                <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                      removeTask={props.removeTask}\r\n                      changeTaskTitle={props.changeTaskTitle}\r\n                      changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }) }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport {\r\n    addTodolistTC, changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from \"../../../bll/todolists-reducer\";\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from \"../../../bll/tasksReduser\";\r\nimport {TaskStatuses, TaskType} from \"../../../bll/Api\";\r\nimport {AddItemForm} from \"../../components/common/AddItemForm\";\r\nimport {Todolist} from \"./todo\";\r\n\r\ntype PropsType = {\r\n    addTodolist: (title: string) => void\r\n    removeTodolist: (todolistId: string) => void\r\n    todolistFromGroup: Array<string>\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = (props: PropsType) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchTodolistsTC())\r\n    }, [dispatch])\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todoList)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const groupTodo = props.todolistFromGroup && props.todolistFromGroup?.map(tlG => {\r\n        const currentTodo = todolists.find((todo:TodolistDomainType) =>  tlG === todo.id)\r\n        return currentTodo\r\n    })\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string,task: TaskType) {\r\n        dispatch(removeTaskTC(id, todolistId,task))\r\n        // dispatch(removeTaskTC(id, todolistId))\r\n    }, [])\r\n    const addTask = (title: string, todolistId: string) => {\r\n        dispatch(addTaskTC(title, todolistId))\r\n    }\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        // dispatch(updateTaskTC(id, {status}, todolistId))\r\n    }, [])\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n       debugger\r\n        dispatch(updateTaskTC(id, {title: newTitle}, todolistId))\r\n    }, [])\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        // dispatch(changeTodolistFilterAC(todolistId, value))\r\n    }, [])\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        dispatch(changeTodolistTitleTC(id, title))\r\n    }, [])\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        //todolistId\r\n       // dispatch(removeTodolistTC(id))\r\n        props.removeTodolist(id)\r\n    }, [])\r\n    const addTodolist = useCallback((title: string) => {\r\n        // dispatch(addTodolistTC(title))\r\n        props.addTodolist(title)\r\n    }, [dispatch])\r\n\r\n     // console.log('groupTodo' ,groupTodo);\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        {/*{groupTodo.length!==0 &&  <Grid container spacing={3}>*/}\r\n        {groupTodo.length>0 &&  <Grid container spacing={3}>\r\n            {\r\n                // todolists.map(tl => {\r\n                groupTodo.map((tl: any) => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                // demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>}\r\n    </>\r\n}\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom';\r\nimport cl from \"../groupUsers/groupUsers.module.css\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport {GroupType} from \"../../../bll/Api\";\r\nimport {\r\n    getGroupByIdTC,\r\n    groupUsersType,\r\n    removeGroupsTC,\r\n    removeTodolistFromGroupTC,\r\n    removeUserFromGroupTC\r\n} from \"../../../bll/groupReduser\";\r\nimport {TodolistsList} from \"../todo/todoList\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {addTodolistTC, removeTodolistTC} from \"../../../bll/todolists-reducer\";\r\nimport {removeGroupFromUserDataTC} from \"../../../bll/userReduser\";\r\n\r\n\r\nconst GroupPage = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const {id}: any = useParams()\r\n    useEffect(() => {dispatch(getGroupByIdTC(id))},[dispatch, id])\r\n\r\n    const group = useSelector<AppRootStateType, GroupType>(state => state.groups.activeGroup)\r\n    const deleteGroup = () => {\r\n        dispatch(removeGroupsTC(id))\r\n    }\r\n    let user = group.data.users?.map((u: groupUsersType) => {\r\n        const removeUser = () => {\r\n            const user = {uid: u.uid, name: u.name}\r\n            dispatch(removeUserFromGroupTC(id, {uid: u.uid, name: u.name}))\r\n            dispatch(removeGroupFromUserDataTC(u.uid))\r\n        }\r\n        return (\r\n            <div key={u.uid}>\r\n                {/*<p>{u.uid}</p>*/}\r\n                <span>{u.name}</span>\r\n                <DeleteIcon onClick={removeUser} color='primary'/>\r\n            </div>\r\n        )\r\n    })\r\n    const addTodolist = useCallback((title: string) => {\r\n        dispatch(addTodolistTC(title, id))\r\n    }, [dispatch])\r\n    const removeTodolist = useCallback(function (todolistId: string) {\r\n        dispatch(removeTodolistTC(todolistId))\r\n        dispatch(removeTodolistFromGroupTC(id, todolistId))\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex'}}>\r\n                <p>name groups:</p><h2> {group.data.group}</h2>\r\n            </div>\r\n            <div className={cl.box}>\r\n                {/*<Button onClick={deleteGroup}>delete</Button>*/}\r\n                {user && <><h5>list users:</h5>\r\n                    <div style={{display: 'flex'}}>{user}</div>\r\n                </>}\r\n                <h5>content for group: </h5>\r\n                <TodolistsList addTodolist={addTodolist} todolistFromGroup={group.data.todoLists}\r\n                               removeTodolist={removeTodolist}/>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default GroupPage;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport {setAppErrorAC} from \"../../../bll/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport function SmallAlert() {\r\n    const message = useSelector<AppRootStateType, string | null>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const open = message !== null\r\n    // const [open, setOpen] = React.useState(false);\r\n    //\r\n    // const handleClick = () => {\r\n    //     setOpen(true);\r\n    // };\r\n    const handleClose = (event?: React.SyntheticEvent, reasons?: string) => {\r\n        if (reasons === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            {/*<Alert severity=\"error\">This is an error message!</Alert>*/}\r\n            {/*<Alert severity=\"warning\">This is a warning message!</Alert>*/}\r\n            {/*<Alert severity=\"info\">This is an information message!</Alert>*/}\r\n            {/*<Alert severity=\"success\">This is a success message!</Alert>*/}\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {mainListItems, secondaryListItems} from './listItems';\nimport {Switch, Route, NavLink} from \"react-router-dom\"\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signOutTC} from \"../../../bll/userReduser\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport Groups from \"../../views/groups/groups\";\nimport {PATH} from \"../../route\";\nimport Users from \"../../views/users/users\";\nimport Page404 from \"../../views/pages/page404/Page404\";\nimport GroupPage from \"../../views/groups/groupPage\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {SmallAlert} from \"../common/SmalAlert\";\nimport {AppRootStateType} from \"../../../bll/store\";\nimport {RequestStatusType} from \"../../../bll/app-reducer\";\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        // height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\n// Pages\nconst Starting = React.lazy(() => import('../../views/starting'));\nconst GroupsUsers = React.lazy(() => import('../../views/groupUsers/groupsUsers'));\n// const Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\n// const Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\n\nexport default function Dashboard() {\n    const dispatch = useDispatch()\n    // const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n    const status = useSelector(state => state.app.status)\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const submitSignOut = () => {\n        dispatch(signOutTC())\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen}\n                                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Dashboard\n                    </Typography>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <NotificationsIcon/>\n                        </Badge>\n                    </IconButton>\n                    <Button onClick={submitSignOut}>sign out</Button>\n                    <NavLink to={'https://lisapatrikeevna.github.io/dragan-2/'} title={'to site'}> <HomeIcon/></NavLink>\n                </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}\n                    classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),}}>\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>{mainListItems}</List>\n                <Divider/>\n                <List>{secondaryListItems}</List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                {status==='loading' && <LinearProgress/>}\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <React.Suspense fallback={'...loading'}>\n                        <Switch>\n                            {/*<Route path=\"/\"  render={props => <Starting {...props}/>} />*/}\n                            <Route exact path={PATH.GROUPS} render={() => <Groups/>}/>\n                            <Route exact path={PATH.USERS} render={() => <Users/>}/>\n                            <Route path=\"/starting\" render={props => <Starting {...props}/>}/>\n                            {/*<Route path=\"/groupsUsers\" render={props => <GroupsUsers {...props}/>}/>*/}\n                            <Route exact path={PATH.PAGEGROUP.path} render={() => <GroupPage/>}/>\n                            <Route exact path={PATH.ERROR404} render={() => <Page404/>}/>\n                            {/*    /!*<Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />*!/*/}\n                            {/*    /!*<Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />*!/*/}\n                        </Switch>\n                        <SmallAlert/>\n                    </React.Suspense>\n                    <Box pt={4}>\n                        <Copyright/>\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n","import React, {useCallback} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../route\";\r\nimport {groupUsersType, removeGroupsTC} from \"../../../bll/groupReduser\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\ntype propsType = {\r\n    id: string\r\n    name: string\r\n    users?: groupUsersType[]\r\n}\r\nconst Group = React.memo((props: propsType) => {\r\n    const dispatch = useDispatch()\r\n    const deleteGroup = useCallback(() => {\r\n        dispatch(removeGroupsTC(props.id))\r\n    }, [props.id])\r\n    let user = props.users?.map(u => <div key={u.uid}>\r\n        {/*<p>{u.uid}</p>*/}\r\n        <span>{u.name}</span></div>)\r\n    return (<>\r\n            <TableRow key={props.id}>\r\n                <TableCell component=\"th\" scope=\"row\">{user}</TableCell>\r\n                <TableCell align=\"right\">\r\n                    {props.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <NavLink to={PATH.PAGEGROUP.getUrl(props.id)}><BorderColorIcon/></NavLink>\r\n                    <DeleteIcon onClick={deleteGroup} color='primary'/>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Group;","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport Group from \"./group\";\r\nimport {GroupType} from \"../../../bll/Api\";\r\nimport cl from \"../groupUsers/groupUsers.module.css\";\r\nimport {addGroupsTC, getGroupsTC} from \"../../../bll/groupReduser\";\r\nimport DenseTable from \"./tableGroup\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\nconst Groups = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getGroupsTC())\r\n    }, [dispatch])\r\n    const allGroups = useSelector<AppRootStateType, Array<GroupType>>(state => state.groups.groups)\r\n    let [nGroup, setNumGroup] = useState<string>('')\r\n    const setNewGroup = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNumGroup(e.currentTarget.value)\r\n    }\r\n    const createGroup = () => {\r\n        dispatch(addGroupsTC(nGroup.trim()))\r\n        setNumGroup('')\r\n    }\r\n    const group = allGroups.map(g => <Group key={g.id} id={g.id} name={g.data.group}\r\n                                                  users={g.data.users}/>)\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <p>GroupsUsers:\r\n                <input type=\"text\" value={nGroup} onChange={setNewGroup}/>\r\n                <button onClick={createGroup}>create group</button>\r\n            </p>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell >Users (lists)</TableCell>\r\n                            <TableCell align=\"right\">Names group</TableCell>\r\n                            {/*<TableCell align=\"right\">Fat&nbsp;(g)</TableCell>*/}\r\n                            <TableCell align=\"right\">buttons group&nbsp;</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {group}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Groups;\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../bll/store\";\r\nimport {updateUserTC} from \"../../../bll/userReduser\";\r\nimport cl from './user.module.css'\r\nimport { createStyles, FormControl, FormHelperText, Select, Theme} from \"@material-ui/core\";\r\nimport {EditableSpan} from \"../../components/common/EditableSpan\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {GroupType} from \"../../../bll/Api\";\r\nimport {groupUsersType, removeUserFromGroupTC} from \"../../../bll/groupReduser\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\ntype propsType = {\r\n    uid: string\r\n    name?: string | undefined\r\n    phoneNumber?: string\r\n    date: string\r\n    email: string\r\n    groupName: string | null\r\n    groupId: string | null\r\n    listTasks?: {} | undefined\r\n    removeUser: (uid: string) => void\r\n    addUserToGroup: (uid: string, groupName: string, name: string, user: groupUsersType) => void\r\n    listGroup: Array<GroupType>\r\n}\r\nconst User = (props: propsType) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const admin = useSelector<AppRootStateType, string>(state => state.users.adminUid)\r\n    const curentUser = useSelector<AppRootStateType, string>(state => state.users.userid)\r\n    let [groupID, setGroupID] = useState<string>('')\r\n    let [name, setName] = useState<string>(props.name ? props.name : 'not a name')\r\n    let [email, setEmail] = useState<string>(props.email)\r\n    let [phone, setPhone] = useState<string>(props.phoneNumber ? props.phoneNumber : 'not a phoneNumber')\r\n    const changeEmail = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n    const changeName = (name: string) => {\r\n        setName(name)\r\n    }\r\n    const changePhone = (phone: string) => {\r\n        setPhone(phone)\r\n    }\r\n    const removeUser = () => {\r\n        const user = {uid: props.uid, name}\r\n        if(props.groupId){\r\n            dispatch(removeUserFromGroupTC(props.groupId,user))\r\n        }\r\n        props.removeUser(props.uid)\r\n    }\r\n    const update = useCallback(() => {\r\n        let payload = {email, name, phone}\r\n        dispatch(updateUserTC(props.uid, payload))\r\n    }, [email, name, phone])\r\n    const addToo = () => {\r\n        const user = {uid: props.uid, name}\r\n        if(props.groupId){\r\n            // debugger\r\n            dispatch(removeUserFromGroupTC(props.groupId,user))\r\n        }\r\n        props.addUserToGroup(groupID, props.uid, name, user)\r\n    }\r\n    const styles = {\r\n        // display:!admin  ?  'block' : 'none'\r\n    }\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroupID(event.target.value as string);\r\n    };\r\n// debugger\r\n    return (\r\n        <div key={props.uid} >\r\n            {/*<p>uid:{props.uid}</p>*/}\r\n            {admin !== curentUser && <>\r\n                <div className={cl.spanWrap}><span>name:</span><h5>{name ? name : 'no name'}</h5></div>\r\n                <div className={cl.spanWrap}><span>email:</span><h5>{props.email}</h5></div>\r\n            </>}\r\n            {admin === curentUser &&\r\n            <div className={cl.TableRow} style={styles}>\r\n                <div className={`${cl.large} ${cl.wrap}`}>\r\n                    <EditableSpan onChange={changeEmail} value={email}/>\r\n                    <EditableSpan onChange={changeName} value={name}/>\r\n                    <EditableSpan onChange={changePhone} value={phone}/>\r\n                </div>\r\n                <div className={`${cl.medium} ${cl.wrap}`}>\r\n                    <UpdateIcon onClick={update} color='primary' />\r\n                    <DeleteIcon onClick={removeUser} color='primary'/>\r\n                <div className={cl.spaceBetween}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\"\r\n                                value={groupID} onChange={handleChange}>\r\n                            {props.listGroup.map(g => {\r\n                                return <option value={g.id} key={g.id}>{g.data.group}</option>\r\n                            })}\r\n                        </Select>\r\n                        <FormHelperText>select group</FormHelperText>\r\n                    </FormControl>\r\n                    {/*<Button onClick={addToo}>add to group</Button>*/}\r\n                    <AddBoxIcon onClick={addToo} color='primary'/>\r\n                </div>\r\n                </div>\r\n                <div className={`${cl.small} ${cl.wrap}`}>\r\n                    {/*<p>date :{props.date}</p>*/}\r\n                    <p>{props.groupName ? props.groupName : 'no group'}</p>\r\n                    <p>{props.listTasks ? props.listTasks : 'no tasks'}</p>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n\r\n","import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    removeUserTC,\n    setUserOnGroupTC,\n    setUsersTC,\n    userType\n} from \"../../../bll/userReduser\";\nimport {AppRootStateType} from \"../../../bll/store\";\nimport User from \"../users/user\";\nimport cl from './user.module.css';\nimport {GroupType} from \"../../../bll/Api\";\nimport {getGroupsTC, groupUsersType} from \"../../../bll/groupReduser\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\nconst Users = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(setUsersTC())\n        dispatch(getGroupsTC())\n    }, [dispatch])\n    const removeUser = useCallback(function (uid: string) {\n        const action = removeUserTC(uid)\n        dispatch(action)\n    }, [])\n    const addUserToGroup = (id: string, uid: string, userName: string, user: groupUsersType) => {\n        // dispatch(setUserOnGroupTC(id,uid, userName))\n        dispatch(setUserOnGroupTC(id, uid, userName, user))\n    }\n    const allUsers = useSelector<AppRootStateType, Array<userType>>(state => state.users.users)\n    const allGroups = useSelector<AppRootStateType, Array<GroupType>>(state => state.groups.groups)\n    const user = allUsers.map(u => <User key={u.uid} groupName={u.groupName} groupId={u.groupId} name={u.displayName} date={u.tokensValidAfterTime}\n                                         email={u.email} listTasks={u.listTasks} uid={u.uid} removeUser={removeUser}\n                                         addUserToGroup={addUserToGroup} phoneNumber={u.phoneNumber}\n                                         listGroup={allGroups}/>)\n    return (\n        <div>\n            <input type=\"text\"/>\n            <h5>all users: </h5>\n            <p>пс. чтоб обновить поля( email и name ) даблклик и апдейт</p>\n            {/*<div className={cl.wrap}>{user}</div>*/}\n            <div>\n                <div className={cl.table} aria-label=\"a dense table\">\n                    <div className={cl.TableHead}>\n                        <div className={cl.TableRow}>\n                            <div className={cl.large}>\n                                <h4>Users (data)</h4>\n                                <span className={cl.wrap}>\n                                    <p>email</p>\n                                    <p>name</p>\n                                    <p>phoneNumber</p>\n                                </span>\n                            </div>\n                            <div className={cl.medium}>\n                                <h4>buttons group</h4>\n                                <span className={cl.wrap}>\n                                    <p>change/add group</p>\n                                    <p>change/delet user</p>\n                                </span>\n                            </div>\n                            <div className={cl.small}>\n                                <h4>Users (info)</h4>\n                                <span className={cl.wrap}>\n                                    <p>group</p>\n                                    <p>task</p>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={cl.TableBody}>\n                        {user}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Users;\n","import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupAppend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Page404 = () => {\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"6\">\n            <div className=\"clearfix\">\n              <h1 className=\"float-left display-3 mr-4\">404</h1>\n              <h4 className=\"pt-3\">Oops! You{'\\''}re lost.</h4>\n              <p className=\"text-muted float-left\">The page you are looking for was not found.</p>\n            </div>\n            <CInputGroup className=\"input-prepend\">\n              <CInputGroupPrepend>\n                <CInputGroupText>\n                  <CIcon name=\"cil-magnifying-glass\" />\n                </CInputGroupText>\n              </CInputGroupPrepend>\n              <CInput size=\"16\" type=\"text\" placeholder=\"What are you looking for?\" />\n              <CInputGroupAppend>\n                <CButton color=\"info\">Search</CButton>\n              </CInputGroupAppend>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Page404\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"groupUsers_wrap__GuI9U\",\"box\":\"groupUsers_box__2uUZq\"};","import {Dispatch} from \"redux\";\r\nimport {handleServerAppError} from \"../utils/error-utils\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'IS-INIT':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'IS-INIT', isInitialized} as const)\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setIsInitializedACType = ReturnType<typeof setIsInitializedAC>\r\n\r\n\r\n// export const initializeAppTC = () => (dispatch: Dispatch) => {\r\n//     authAPI.me()\r\n//         .then(res => {\r\n//         // debugger\r\n//         if (res.data.resultCode === 0) {\r\n//             dispatch(setIsLoggedInAC(true));\r\n//\r\n//          }\r\n//         else {\r\n//             // debugger\r\n//             // // handleServerAppError(err, dispatch);\r\n//         }\r\n//     })\r\n//         .catch((err) => {\r\n//             handleServerAppError(err, dispatch);\r\n//             dispatch(setIsInitializedAC(true))\r\n//             // throw new Error(err.message)\r\n//         })\r\n//     dispatch(setIsInitializedAC(true))\r\n// }\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | setIsInitializedACType\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceBetween\":\"user_spaceBetween__1iYEJ\",\"spanWrap\":\"user_spanWrap__6Nb44\",\"wrap\":\"user_wrap__29-_l\",\"box\":\"user_box__Jsi2i\",\"table\":\"user_table__1zvg_\",\"TableHead\":\"user_TableHead__1Hex3\",\"TableRow\":\"user_TableRow__1cN_h\",\"TableBody\":\"user_TableBody__12VlH\",\"large\":\"user_large__31K9m\",\"small\":\"user_small__1Oid5\",\"medium\":\"user_medium__3CVnS\"};","import {AnyAction, Dispatch} from \"redux\";\nimport {GroupType, Users, GroupsApi} from \"./Api\";\nimport * as uuid from 'uuid';\nimport {getAllUsersFirestoreTC} from \"./userReduser\";\n\nexport type setGroupsACType = ReturnType<typeof setGroupsAC>\ntype addGroupsACType = ReturnType<typeof addGroupsAC>\ntype deleteGroupsACType = ReturnType<typeof deleteGroupsAC>\ntype getGroupByIdACType = ReturnType<typeof getGroupByIdAC>\ntype actionType = setGroupsACType | addGroupsACType | deleteGroupsACType | getGroupByIdACType\nexport type  groupUsersType = {\n    uid: string\n    name?: string\n}\n\ntype initStateType = {\n    groups: GroupType[]\n    activeGroup: GroupType\n    status: boolean\n    userRecord: string\n    message: string\n}\n\nexport let initState: initStateType = {\n    groups: [],\n    activeGroup: {id: 'ggggggg', data: {group: 'string', users: [],todoLists:[]}},\n    // activeGroup: {} as GroupType,\n    status: false,\n    userRecord: '',\n    message: '',\n}\n\nexport const groupReducer = (state = initState, action: actionType) => {\n    switch (action.type) {\n        case 'GROUP/SET-GROUPS':\n            return {...state, groups: action.payload}\n        case 'GROUP/ADD-GROUP':\n            return {...state, groups: [...state.groups, action.payload]}\n        case 'GROUP/DELETE-GROUP':\n            return {...state, groups: [state.groups.filter(g => g.id !== action.payload)]}\n        case \"GROUP/GET-GROUP-WITH-ID\": {\n            return {\n                ...state,\n                activeGroup: action.payload\n            }\n        }\n        default:\n            return {...state}\n    }\n}\nexport const setGroupsAC = (payload: any) => ({type: 'GROUP/SET-GROUPS', payload} as const)\nexport const addGroupsAC = (payload: any) => ({type: 'GROUP/ADD-GROUP', payload} as const)\nexport const deleteGroupsAC = (payload: any) => ({type: 'GROUP/DELETE-GROUP', payload} as const)\nexport const getGroupByIdAC = (payload: GroupType) => ({type: 'GROUP/GET-GROUP-WITH-ID', payload} as const)\n\n//TC\nexport const getGroupsTC = () => (dispatch: Dispatch) => {\n    GroupsApi.getGroups()\n        .then(res => {\n                dispatch(setGroupsAC(res))\n            }\n        )\n}\nexport const getGroupByIdTC = (id: string) => (dispatch: Dispatch) => {\n    // debugger\n    GroupsApi.getGroupById(id)\n        .then(res => {\n                // console.log('group.getGroupByIdAC;' + parseInt(res));\n                // dispatch(getGroupByIdAC(res))\n                dispatch(getGroupByIdAC({data: res, id}))\n            }\n        )\n}\nexport const removeGroupsTC = (id: string) => (dispatch: any) => {\n    GroupsApi.groupRemove(id).then(res => {\n        dispatch(getGroupsTC())\n        console.log(res);\n    })\n}\nexport const addGroupsTC = (group: string) => (dispatch: any) => {\n    let id = uuid.v1()\n    GroupsApi.addGroup(id, group)\n        .then(res => {\n            dispatch(getGroupsTC())\n            console.log(res);\n        })\n}\nexport const removeUserFromGroupTC = (id: string,user: groupUsersType) => (dispatch: any) => {\n   // debugger\n    GroupsApi.removeUserFromGroup(id, user).then(res => {\n        dispatch(getGroupByIdTC(id))\n        console.log(res);\n    })\n\n}\nexport const removeTodolistFromGroupTC = (id: string,todolistId:string) => (dispatch: any) => {\n    GroupsApi.removeTodoFromGroup(id, todolistId).then(res => {\n        dispatch(getGroupByIdTC(id))\n        console.log(res);\n    })\n}\n","import {Dispatch} from \"redux\";\nimport {FireBaseResponse, GroupsApi, GroupType, Users, UserType} from \"./Api\";\nimport firebase from \"firebase\";\nimport {app} from \"../index\";\nimport {getGroupsTC, groupUsersType, setGroupsACType} from \"./groupReduser\";\n\ntype setUsersACType = ReturnType<typeof setUsersAC>\ntype authACType = ReturnType<typeof authAC>\ntype setUserAdditionalInformationACType = ReturnType<typeof setUserAdditionalInformationAC>\ntype setUserRecordACType = ReturnType<typeof setUserRecordAC>\ntype loginUserACType = ReturnType<typeof loginUserAC>\ntype actionType = setUsersACType | setUserAdditionalInformationACType\n    | setUserRecordACType | authACType | loginUserACType | setGroupsACType\n\n// type providerDataType = {\n//     0: { uid: string, email: string, providerId: string }\n//     length: number\n//     tokensValidAfterTime: string\n// }\nexport type userType = {\n    disabled: boolean\n    displayName: string\n    email: string\n    emailVerified: boolean\n    metadata: { lastSignInTime: string, creationTime: string }\n    passwordHash: string\n    passwordSalt: string\n    providerData: any\n    tokensValidAfterTime: string\n    uid: string\n    photoURL?: string\n    phoneNumber?: string\n    groupName: string | null\n    groupId: string | null\n    listTasks?: {}\n}\n\ntype initStateType = {\n    groups: GroupType[]\n    users: Array<userType>\n    status: boolean\n    userRecord: string\n    adminUid: string\n    message: string\n    email: string\n    userid: string\n}\n\nlet initState: initStateType = {\n    groups: [],\n    users: [],\n    status: false,\n    userRecord: '',\n    adminUid: 'WuVt9TwRQ0grRFpgAKQlB1nJGAm1',\n    message: '',\n    email: '',\n    userid: '',\n}\n\nexport const userReducer = (state = initState, action: actionType) => {\n    switch (action.type) {\n        case \"USERS/LOGIN_USER\":\n            return {...state, email: action.email, userid: action.userid}\n        case \"USERS/AUTH\":\n            return {...state, status: action.payload}\n        case \"USERS/SET-USER-RECORD\":\n            return {...state, userRecord: action.payload, status: true}\n        case 'GROUP/SET-GROUPS':\n            return {...state, groups: action.payload}\n        case 'USERS/SET-USERS':\n            return {...state, users: action.payload}\n        case \"USERS/SET-USER-INFORMATION\": {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    const currentUser = action.payload.find((currentUser) => u.uid === currentUser.id)\n                    if (currentUser) {\n                        debugger\n                        const group = state.groups.find(group => group.id === currentUser.data.user.id)\n                        return {\n                            ...u, groupName: group?.data.group,groupId:currentUser.data.user.id, listTasks: currentUser.data.user.listTasks\n                        }\n                    } else {\n                        return u\n                    }\n                })\n            }\n        }\n        default:\n            return {...state}\n    }\n}\nexport const authAC = (payload: boolean) => ({type: 'USERS/AUTH', payload} as const)\nexport const setUsersAC = (payload: any) => ({type: 'USERS/SET-USERS', payload} as const)\nexport const setUserRecordAC = (payload: string) => ({type: 'USERS/SET-USER-RECORD', payload} as const)\nexport const setUserAdditionalInformationAC = (payload: Array<FireBaseResponse<UserType>>) => ({\n    type: 'USERS/SET-USER-INFORMATION', payload} as const)\nexport const loginUserAC = (email: string, userid: string) => ({type: 'USERS/LOGIN_USER', email, userid} as const)\n\n//TC\nexport const authTC = () => (dispatch: Dispatch) => {\n    app.auth().onAuthStateChanged(function (user: any) {\n        // console.log('onAuthStateChanged :', user);\n        if (user) {\n            dispatch(authAC(true))\n            dispatch(loginUserAC(user.email, user.uid))\n        } else {\n            dispatch(authAC(false))\n        }\n    })\n}\nexport const removeUserTC = (uid: string) => (dispatch: any) => {\n    Users.userRemove(uid).then(res => {\n        dispatch(setUsersTC())\n        console.log(res);\n    })\n}\nexport const removeGroupFromUserDataTC = (uid: string) => (dispatch: any) => {\n    Users.deleteGroupFromUserData(uid).then(res => {\n        dispatch(setUsersTC())\n        console.log(res);\n    })\n}\nexport const updateUserTC = (uid: string, payload: any) => (dispatch: any) => {\n    Users.updateUser(uid, payload).then(res => {\n        dispatch(setUsersTC())\n        console.log(res);\n    })\n}\nexport const createUserTC = (email: string, password: string, username: string) => (dispatch: any) => {\n    Users.createUser(email, password, username).then(res => {\n        dispatch(setUserRecordAC(res.data))\n        if (res.data.message) {\n            alert(res.data.message)\n        }\n    })\n}\nexport const setUsersTC = () => async (dispatch: Dispatch) => {\n    try {\n        const users = await Users.getAllUsers()\n        const infoUser = await Users.getAllUsersFirestore()\n        dispatch(setUsersAC(users.data))\n        dispatch(setUserAdditionalInformationAC(infoUser))\n    } catch (e) {\n        console.log(e)\n    }\n}\nexport const getAllUsersFirestoreTC = () => (dispatch: Dispatch) => {\n    Users.getAllUsersFirestore().then(res => {\n        // console.log('Users.getAllUsersFirestore' + res);\n        dispatch(setUserAdditionalInformationAC(res))\n    })\n}\nexport const setUserOnGroupTC = (id: string, uid: string, userName: string, user: groupUsersType) =>\n    (dispatch: any) => {\n        GroupsApi.addUserOnGroup(id, user).then(res => {\n            dispatch(getGroupsTC())\n        })\n        Users.addUserData(uid, id, userName).then(res => {\n            // console.log(\"setUserOnGroupTC: \", res);\n            dispatch(getAllUsersFirestoreTC())\n        })\n    }\nexport const loginUserTC = (email: string, password: string) => (dispatch: any) => {\n    app.auth().signInWithEmailAndPassword(email, password)\n        .then((res) => {\n            dispatch(authAC(true))\n            dispatch(setUsersTC())\n            // console.log(res);\n        })\n        .catch(er => {\n            console.log(er);\n        })\n}\nexport const signOutTC = () => (dispatch: Dispatch) => {\n    firebase.auth().signOut().then((res) => {\n        console.log(res);\n    }).catch((error) => {\n        console.log(error);\n    });\n}\n\n\n// export const addItemTC = ( group: string) => (dispatch: Dispatch) => {\n// // export const addGroupsTC = (id: string, group: string) => (dispatch: Dispatch) => {\n//     debugger\n//     // dispatch(setGroupsAC({id,group}))\n//\n//     Users.addGroup(group)\n//         .then(res => {\n//             debugger\n//\n//            dispatch(setGroupsAC(res.data))\n//            // dispatch(setGroupsAC({id,name}))\n//         })\n// }","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"../bll/app-reducer\"\r\nimport {ResponseType} from '../bll/Api'\r\n\r\nexport const handleServerAppError = <D>(data: ResponseType<D>, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    if (data.messages.length) {\r\n        dispatch(setAppErrorAC(data.messages[0]))\r\n    } else {\r\n        dispatch(setAppErrorAC('Some error occurred'))\r\n    }\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\nexport const handleServerNetworkError = (error: { message: string }, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.message ? error.message : 'Some error occurred'))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n","import {Dispatch} from \"redux\";\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType, Users} from \"./Api\";\nimport { RemoveTodolistActionType, SetTodolistsActionType} from \"./todolists-reducer\";\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../utils/error-utils\";\nimport * as uuid from \"uuid\";\nimport {AppRootStateType} from \"./store\";\n\n\nexport type UpdatedTaskType ={\n    description?: string\n    title?: string\n    status?: TaskStatuses\n    priority?: TaskPriorities\n    startDate?: string\n    deadline?: string\n    id?: string\n    todoListId?: string\n    order?: number\n    addedDate?: string\n}\nexport type TasksStateType = {\n    [key: string]: Array<TaskType>\n}\ntype ActionsType =\n    | ReturnType<typeof removeTaskAC>\n    | ReturnType<typeof addTaskAC>\n    | ReturnType<typeof updateTaskAC>\n    | RemoveTodolistActionType\n    | SetTodolistsActionType\n    | ReturnType<typeof setTasksAC>\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\n\n\nconst initialState: TasksStateType = {}\n\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\n    switch (action.type) {\n        case 'REMOVE-TASK':\n            debugger\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id !== action.taskId)}\n        case 'ADD-TASK': {\n            return {\n                ...state,\n                [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]\n            }\n        }\n        case 'UPDATE-TASK':\n            debugger\n            return {\n                ...state,\n                [action.todolistId]: state[action.todolistId]\n                    .map(t => t.id === action.taskId ? { ...t,...action.updatedTask} : t)\n            }\n        case 'REMOVE-TODOLIST':\n            const copyState = {...state}\n            delete copyState[action.id]\n            return copyState\n        case 'SET-TODOLISTS': {\n            const copyState = {...state}\n            action.todolists.forEach(tl => {\n                copyState[tl.id] = []\n            })\n            return copyState\n        }\n        case 'SET-TASKS':\n            return {...state, [action.todolistId]: action.tasks}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\nexport const addTaskAC = (task: TaskType) =>\n    ({type: 'ADD-TASK', task} as const)\nexport const updateTaskAC = (taskId: string, updatedTask: UpdatedTaskType, todolistId: string) =>\n    ({type: 'UPDATE-TASK', updatedTask, todolistId, taskId} as const)\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\n\n// thunks\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\n    dispatch(setAppStatusAC('loading'))\ndebugger\n    todolistsAPI.getTasks(todolistId)\n        .then((res) => {\n            //@ts-ignore\n            const tasks = res.data.task\n            dispatch(setTasksAC(tasks, todolistId))\n            dispatch(setAppStatusAC('succeeded'))\n        })\n}\nexport const removeTaskTC = (taskId: string, todolistId: string,task: TaskType) => (dispatch: Dispatch<ActionsType>) => {\n    debugger\n    todolistsAPI.deleteTask(todolistId,task)\n    // todolistsAPI.deleteTask(taskId,todolistId)\n        .then(res => {\n            dispatch(removeTaskAC(taskId, todolistId))\n        })\n}\nexport const addTaskTC = (title: string, todoListId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\n    dispatch(setAppStatusAC('loading'))\n    let description= '';\n    let  completed = false;\n    let status = 0;\n    let priority = 0;\n    let startDate = new Date().toDateString()\n    let deadline = new Date().toDateString() //required(datetime)\n    let id = uuid.v1()\n    let order = 0;// required(integer)\n    let addedDate = new Date().toDateString()\n    debugger\n    // const item = {description,title,  status, priority, startDate, deadline, id, todoListId, order, addedDate}\n    // todolistsAPI.addTask(todoListId, {[id]:item})\n    todolistsAPI.addTask(todoListId, {description,title,  status, priority, startDate, deadline, id, todoListId, order, addedDate})\n        .then(res => {\n            if (res.status=== 200) {\n            debugger\n            //@ts-ignore\n            //     const task = res.data.item\n            // console.log(task);\n            // const action = addTaskAC(task)\n                // dispatch(action)\n               dispatch(setAppStatusAC('succeeded'))\n            } else {\n                // handleServerAppError(res.statusText, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n    todolistsAPI.getTasks(todoListId).then(res=>{\n        debugger\n        //@ts-ignore\n        dispatch(setTasksAC(res.data.task,todoListId))\n    })\n}\nexport const updateTaskTC = (taskId: string, updatedTask: UpdatedTaskType, todolistId: string) =>\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\n        const state = getState()\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\n        if (!task) {\n            //throw new Error(\"task not found in the state\");\n            console.warn('task not found in the state')\n            return\n        }\ndebugger\n        const updatedTaskModel: TaskType = {\n            description: task.description,\n            title: task.title,\n            status: task.status,\n            priority: task.priority,\n            startDate: task.startDate,\n            deadline: task.deadline,\n            id: task.id,\n            todoListId: task.todoListId,\n            order: task.order,\n            addedDate: task.addedDate,\n            ...updatedTask\n        }\n\n        todolistsAPI.updateTask(todolistId, taskId, updatedTaskModel)\n            .then(res => {\n                if (res.status=== 200) {\n                    const action = updateTaskAC(taskId, updatedTask, todolistId)\n                    dispatch(action)\n                } else {\n                    handleServerAppError(res.data, dispatch);\n                }\n            })\n            .catch((error) => {\n                handleServerNetworkError(error, dispatch);\n            })\n    }\n\n\nexport const setUsersAC = (payload: any) => ({type: 'SET-USERS', payload} as const)\nexport const setGroupsAC = (payload: any) => ({type: 'SET-GROUPS', payload} as const)\nexport const addGroupsAC = (payload: any) => ({type: 'ADD-GROUPS', payload} as const)\n//export const setUsersTC = (payload:any) =>({type: 'SET-USERS',payload}as const)\n// export const setTasksTC = () => (dispatch:Dispatch) =>{\n//   const tasks =firebase.database().ref('tasks')\n//   tasks.on('value',(el)=>{\n//     dispatch(setUsers(el.val()))\n//     // let aaa = el.val()\n//     // console.log(aaa);\n//   })\n// }\nexport const setUsersTC = () => (dispatch: Dispatch) => {\n    Users.getAllUsers()\n        .then(res => {\n                dispatch(setUsersAC(res.data.users))\n            }\n        )\n}\nexport const setTasksTC = () => (dispatch: Dispatch) => {\n    Users.getAllUsers()\n        .then(res => {\n                dispatch(setUsersAC(res.data.users))\n            }\n        )\n}\n// export const addGroups = (id: string, name: string) => (dispatch: Dispatch) => {\n//     debugger\n//     Users.addGroup(id, name)\n//         .then(res => {\n//             debugger\n//             dispatch(setGroupsAC(res.data))\n//         })\n// }","export const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/registration\",\r\n    GROUPS: \"/groups\",\r\n    USERS: \"/users\",\r\n    PAGEGROUP: {\r\n        path: \"/groups/:id\",\r\n        getUrl(id: string) {\r\n            return `/groups/${id}`\r\n        }\r\n    },\r\n    ERROR404: \"/404\",\r\n    ERROR500: \"/500\",\r\n    PASS_RECOVERY: \"/password-recovery\",\r\n    PASS_NEW: \"/entering-new-password/:token\",\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    // console.log(\"EditableSpan called\");\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [item, setItem] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setItem(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(item);\r\n    }\r\n    const changeItem = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setItem(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <TextField value={item} onChange={changeItem} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n});\r\n","import {AnyAction, Dispatch} from 'redux'\r\nimport {GroupsApi, Tasks, todolistsAPI, TodoslistType} from \"./Api\";\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\nimport * as uuid from \"uuid\";\r\nimport {getGroupByIdTC} from \"./groupReduser\";\r\nimport {fetchTasksTC, removeTaskAC} from \"./tasksReduser\";\r\n// types\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistType = {\r\n    addedDate: string\r\n    id: string\r\n    order: number\r\n    title: string\r\n}\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        // case 'CHANGE-TODOLIST-FILTER':\r\n        //     return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS': {\r\n            //@ts-ignore\r\n            return action.todolists.map(tl => ({...tl.data, filter: 'all', entityStatus: 'idle'}))\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE', id, title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER', id, filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status\r\n} as const)\r\nexport const setTodolistsAC = (todolists: Array<TodoslistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => (dispatch: Dispatch<any>) => {\r\n    //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n    dispatch(setAppStatusAC('loading'))\r\n    //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n    dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n    debugger\r\n    Tasks.taskRemove(todolistId)\r\n        .then(res => {\r\n                dispatch(removeTaskAC(todolistId, todolistId))\r\n                console.log(res);\r\n            }\r\n        )\r\n    todolistsAPI.deleteTodolist(todolistId)\r\n        .then((res) => {\r\n            // dispatch(removeTodolistAC(todolistId))\r\n            //скажем глобально приложению, что асинхронная операция завершена\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n    dispatch(fetchTodolistsTC())\r\n}\r\nexport const addTodolistTC = (title: string, id: string) => (dispatch: any) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    let todoId = uuid.v1()\r\n    let addedDate = new Date().toDateString()\r\n    let order = 0\r\n    // debugger\r\n    todolistsAPI.createTodolist(todoId, title, addedDate, order)\r\n        .then((res) => {\r\n            // console.log(res);\r\n            dispatch(fetchTodolistsTC())\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n    todolistsAPI.createTask(todoId).then(res => {\r\n        dispatch(fetchTasksTC(todoId))\r\n        // console.log(res);\r\n    })\r\n    // debugger\r\n    GroupsApi.addTodoOnGroup(id, todoId).then(res => {\r\n        ///???????  useEffect(() => {dispatch(getGroupByIdTC(id))},[])\r\n        dispatch(getGroupByIdTC(id))\r\n        // console.log(res);\r\n    })\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.updateTodolist(id, title)\r\n        .then((res) => {\r\n            debugger\r\n            dispatch(changeTodolistTitleAC(id, title))\r\n        })\r\n\r\n}\r\n\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\nexport type changeTodolistTitleACType = ReturnType<typeof changeTodolistTitleAC>;\r\nexport type changeTodolistEntityStatusACType = ReturnType<typeof changeTodolistEntityStatusAC>;\r\nexport type changeTodolistFilterACType = ReturnType<typeof changeTodolistFilterAC> ;\r\ntype ActionsType = RemoveTodolistActionType\r\n    | changeTodolistTitleACType | changeTodolistEntityStatusACType\r\n    | changeTodolistFilterACType | SetTodolistsActionType\r\n\r\n"],"sourceRoot":""}